{"version":3,"sources":["core.js","promise.js","net.js","util.js","AndroidPay.js","PublicKeyResponse.js","PaymentProductPublicKeyResponse.js","C2SCommunicatorConfiguration.js","IinDetailsResponse.js","C2SCommunicator.js","LabelTemplateElement.js","Attribute.js","AccountOnFileDisplayHints.js","AccountOnFile.js","PaymentProductDisplayHints.js","BasicPaymentProduct.js","BasicPaymentProductGroup.js","MaskedString.js","MaskingUtil.js","ValidationRuleLuhn.js","ValidationRuleExpirationDate.js","ValidationRuleFixedList.js","ValidationRuleLength.js","ValidationRuleRange.js","ValidationRuleRegularExpression.js","ValidationRuleEmailAddress.js","ValidationRuleBoletoBancarioRequiredness.js","ValidationRuleFactory.js","DataRestrictions.js","ValueMappingElement.js","FormElement.js","Tooltip.js","PaymentProductFieldDisplayHints.js","PaymentProductField.js","PaymentProduct.js","PaymentProductGroup.js","BasicPaymentProducts.js","BasicPaymentProductGroups.js","BasicPaymentItems.js","PaymentRequest.js","C2SPaymentProductContext.js","JOSEEncryptor.js","Encryptor.js","session.js"],"names":["global","connectsdk","modules","define","module","dependencies","fn","length","i","apply","this","exports","window","turing","Promise","singleton","self","pending","resolve","result","complete","reject","isSingleton","prototype","then","success","failure","push","type","shift","xhr","XMLHttpRequest","location","protocol","ActiveXObject","e","successfulRequest","request","status","responseText","ajax","url","options","respondToReadyState","readyState","contentType","mimeType","getResponseHeader","response","test","responseJSON","net","parseJSON","responseXML","parseXML","callback","promise","error","setHeaders","defaults","Accept","Content-Type","name","headers","hasOwnProperty","setRequestHeader","send","postBody","chain","method","toLowerCase","asynchronous","onreadystatechange","open","serialize","set","key","value","data","end","arguments","JSONPCallback","runCallback","json","teardown","methodName","parseInt","Date","getTime","trim","s","replace","object","results","encodeURIComponent","join","string","JSON","parse","DOMParser","text","parseFromString","xml","async","loadXML","run","scriptTag","document","createElement","id","src","that","onerror","body","appendChild","removeChild","get","post","jsonp","Util","createInstance","applePayPaymentProductId","androidPayPaymentProductId","bancontactPaymentProductId","getMetadata","screenSize","innerWidth","innerHeight","platformIdentifier","navigator","userAgent","sdkIdentifier","GC","rppEnabledPage","sdkCreator","base64Encode","stringify","o1","o2","o3","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","slice","filterOutProductsThatAreNotSupportedInThisBrowser","paymentProducts","product","paymentProductsThatAreNotSupportedInThisBrowser","indexOf","splice","instance","getInstance","_util","_C2SCommunicator","_paymentProductSpecificInputs","_context","setupRequestMethodData","networks","publicKey","androidPayEnvironment","environment","supportedMethods","merchantId","androidPay","allowedCardNetworks","paymentMethodTokenizationParameters","tokenizationType","parameters","setupRequestDetails","totalAmount","toFixed","total","label","amount","currency","setupRequestOptions","requestShipping","requestPayerEmail","requestPayerPhone","requestPayerName","_doCanMakePayment","jsonNetworks","jsonPublicKey","methodData","details","PaymentRequest","setTimeout","canMakePayment","_checkPaymentProductPublicKey","getPaymentProductPublicKey","_checkPaymentProductNetworks","getPaymentProductNetworks","_isPaymentRequestAPIAvailable","AndroidPay","C2SCommunicator","isAndroidPayAvailable","context","paymentProductSpecificInputs","isMerchantIdProvided","PublicKeyResponse","keyId","PaymentProductPublicKeyResponse","C2SCommunicatorConfiguration","sessionDetails","endpoints","PROD","EU","API","ASSETS","US","AMS","PAR","PREPROD","SANDBOX","INTEGRATION","DEV_NAMI","DEV_ISC","region","clientSessionId","clientSessionID","customerId","apiBaseUrl","assetsBaseUrl","IinDetailsResponse","countryCode","paymentProductId","isAllowedInContext","coBrands","Net","c2SCommunicatorConfiguration","paymentProduct","_c2SCommunicatorConfiguration","_cache","_providedPaymentProduct","_AndroidPay","_mapType","expirydate","numericstring","integer","expirationDate","_cleanJSON","il","fields","field","displayHints","validatorKey","dataRestrictions","validators","formElement","list","tooltip","image","sort","a","b","displayOrder","logo","_extendLogoUrl","postfix","_isPaymentProductInList","metadata","getBasicPaymentProducts","cacheBust","cacheKey","locale","isRecurring","res","console","warn","getBasicPaymentProductGroups","getPaymentProduct","errorId","errors","code","propertyName","message","httpStatusCode","getPaymentProductUrl","bancontact","forceBasicFlow","cleanedJSON","getPaymentProductGroup","paymentProductGroupId","getPaymentProductIdByCreditCardNumber","partialCreditCardNumber","iinDetailsResponse","convertContextToIinDetailsContext","bin","paymentContext","amountOfMoney","currencyCode","getPublicKey","publicKeyResponse","paymentProductPublicKeyResponse","getPaymentProductDirectory","convertAmount","source","target","getThirdPartyPaymentStatus","paymentId","getCustomerDetails","constructCacheKeyFromKeyValues","values","prefix","LabelTemplateElement","attributeKey","mask","wildcardMask","Attribute","mustWriteReason","_parseJSON","_json","_labelTemplate","_labelTemplateElementByAttributeKey","labelTemplate","l","labelTemplateElement","AccountOnFileDisplayHints","labelTemplateElementByAttributeKey","_attributes","_attributeByKey","attributes","attribute","AccountOnFile","attributeByKey","getMaskedValueByAttributeKey","undefined","MaskingUtil","applyMask","PaymentProductDisplayHints","_accountsOnFile","_accountOnFileById","accountsOnFile","accountOnFile","BasicPaymentProduct","accountOnFileById","allowsRecurring","allowsTokenization","autoTokenized","maxAmount","minAmount","paymentMethod","mobileIntegrationLevel","usesRedirectionTo3rdParty","paymentProductGroup","BasicPaymentProductGroup","MaskedString","formattedValue","cursorIndex","_fillBuffer","index","offset","buffer","tempMask","valuec","Number","newValue","oldValue","split","maskc","c","cursor","tester","substring","getMaxLengthBasedOnMask","newLength","removeMask","valueIndex","inMask","ValidationRuleLuhn","errorMessageId","validate","luhnArr","sum","p","o","_validateDateFormat","ValidationRuleExpirationDate","now","getFullYear","getMonth","ValidationRuleFixedList","allowedValues","ValidationRuleLength","maxLength","minLength","ValidationRuleRange","maxValue","minValue","isNaN","ValidationRuleRegularExpression","regularExpression","RegExp","ValidationRuleEmailAddress","ValidationRuleBoletoBancarioRequiredness","fiscalNumberLength","fiscalNumberValue","ValidationRuleFactory","makeValidator","classType","toUpperCase","className","eval","DataRestrictions","isRequired","validationRules","validationRuleByType","_validationRules","_validationRuleByType","validationRuleFactory","validationRule","ValueMappingElement","displayName","FormElement","valueMapping","_valueMapping","Tooltip","PaymentProductFieldDisplayHints","obfuscate","placeholderLabel","preferredInputType","alwaysShow","PaymentProductField","_errorCodes","getErrorCodes","isValid","hasError","validator","applyWildcardMask","_paymentProductFields","_paymentProductFieldById","paymentProductField","PaymentProduct","basicPaymentProduct","paymentProductFields","paymentProductFieldById","PaymentProductGroup","_parseJson","_paymentProducts","_paymentProductById","_paymentProductByAccountOnFileId","aofs","j","jl","aof","BasicPaymentProducts","basicPaymentProducts","basicPaymentProductById","basicPaymentProductByAccountOnFileId","_paymentProductGroups","_paymentProductGroupById","paymentProductGroups","BasicPaymentProductGroups","basicPaymentProductGroups","basicPaymentProductGroupById","_products","_groups","_basicPaymentItems","doRemove","groupId","groupReplaced","productMethod","basicPaymentItems","basicPaymentItem","basicPaymentItemById","BasicPaymentItems","products","groups","_fieldValues","_paymentProduct","_accountOnFile","_tokenize","getErrorMessageIds","allRequiredFieldsPresent","getValue","getAccountOnFile","setValue","paymentProductFieldId","setTokenize","tokenize","getTokenize","concat","getValues","getMaskedValue","getMaskedValues","maskedString","getUnmaskedValues","setPaymentProduct","setAccountOnFile","getClientSessionID","C2SPaymentProductContext","payload","pki","forge","base64UrlEncode","asn1","str","util","encode64","createProtectedHeader","kid","JOSEHeader","alg","decodePemPublicKey","publickeyB64Encoded","publickeyB64Decoded","decode64","buffer2","createBuffer","publickeyObject2","fromDer","publicKeyFromAsn1","encryptContentEncryptionKey","CEK","encrypt","encryptPayload","encKey","initializationVector","cipher","createCipher","start","iv","update","finish","output","bytes","calculateAdditionalAuthenticatedDataLength","encodededProtectedHeader","lengthInBits","putInt32","calculateHMAC","macKey","cipherText","al","putBytes","hmacInput","hmac","create","sha512","digest","JOSEEncryptor","plainTextValues","protectedHeader","random","getBytesSync","CEKKEYLENGTH","encryptedContentEncryptionKey","encodedEncryptedContentEncryptionKey","IVLENGTH","encodededinitializationVector","encodedCipherText","calculatedHmac","authenticationTag","Encryptor","publicKeyResponsePromise","paymentRequest","encryptedString","blob","nonce","bytesToHex","paymentValues","ownValues","Object","getOwnPropertyNames","joseEncryptor","session","_paymentProductId","_paymentRequestPayload","_paymentRequest","_paymentProductGroupId","_paymentProductGroup","_c2sCommunicator","_session","paymentRequestPayload","c2SPaymentProductContext","getBasicPaymentItems","useGroups","getIinDetails","getPaymentRequest","getEncryptor","Session"],"mappings":"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","file":"connectsdk.min.js","sourcesContent":["(function (global) {\n    var connectsdk = {}, modules = {};\n\n    /* SDK internal function */\n    connectsdk.define = function (module, dependencies, fn) {\n        if (dependencies && dependencies.length) {\n            for (var i = 0; i < dependencies.length; i++) {\n                dependencies[i] = modules[dependencies[i]];\n            }\n        }\n        modules[module] = fn.apply(this, dependencies || []);\n    };\n\n    // Export `connectsdk` based on environment.\n    global.connectsdk = connectsdk;\n\n    if (typeof exports !== 'undefined') {\n        exports.connectsdk = connectsdk;\n    }\n\n    connectsdk.define('connectsdk.core', [], function () {\n        return connectsdk;\n    });\n\n    // use require.js if available otherwise we use our own\n    if (typeof define === 'undefined') {\n        global.define = connectsdk.define;\n    }\n} (typeof window === 'undefined' ? this : window));\n\n// (re)define core\ndefine(\"connectsdk.core\", [], function () {\n    var global = typeof window === 'undefined' ? this : window;\n    var connectsdk = {};\n    global.connectsdk = connectsdk;\n    if (typeof exports !== 'undefined') {\n        exports.connectsdk = connectsdk;\n    }\n    return connectsdk;\n});\n","define('connectsdk.promise', ['connectsdk.core'], function(turing) {\n\tfunction PromiseModule(global) {\n\t\t/**\n\t\t * The Promise class.\n\t\t */\n\t\tfunction Promise(singleton) {\n\t\t\tvar self = this;\n\t\t\tthis.pending = [];\n\n\t\t\t/**\n\t\t\t * Resolves a promise.\n\t\t\t *\n\t\t\t * @param {Object} A value\n\t\t\t */\n\t\t\tthis.resolve = function(result) {\n\t\t\t\tself.complete('resolve', result);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Rejects a promise.\n\t\t\t *\n\t\t\t * @param {Object} A value\n\t\t\t */\n\t\t\tthis.reject = function(result) {\n\t\t\t\tself.complete('reject', result);\n\t\t\t};\n\n\t\t\tif (singleton) {\n\t\t\t\tthis.isSingleton = true;\n\t\t\t}\n\t\t}\n\n\n\t\tPromise.prototype = {\n\t\t\t/**\n\t\t\t * Adds a success and failure handler for completion of this Promise object.\n\t\t\t *\n\t\t\t * @param {Function} success The success handler\n\t\t\t * @param {Function} success The failure handler\n\t\t\t * @returns {Promise} `this`\n\t\t\t */\n\t\t\tthen : function(success, failure) {\n\t\t\t\tthis.pending.push({\n\t\t\t\t\tresolve : success,\n\t\t\t\t\treject : failure\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs through each pending 'thenable' based on type (resolve, reject).\n\t\t\t *\n\t\t\t * @param {String} type The thenable type\n\t\t\t * @param {Object} result A value\n\t\t\t */\n\t\t\tcomplete : function(type, result) {\n\t\t\t\twhile (this.pending[0]) {\n\t\t\t\t\tthis.pending.shift()[type](result);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tglobal.Promise = Promise;\n\t}\n\tPromiseModule(connectsdk);\n\n\treturn connectsdk.Promise;\n});","define('connectsdk.net', ['connectsdk.core'], function(connectsdk) {\n  var net = {};\n\n  /**\n    * Ajax request options:\n    *\n    *   - `method`: {String} HTTP method - GET, POST, etc.\n    *   - `success`: {Function} A callback to run when a request is successful\n    *   - `error`: {Function} A callback to run when the request fails\n    *   - `asynchronous`: {Boolean} Defaults to asynchronous\n    *   - `postBody`: {String} The HTTP POST body\n    *   - `contentType`: {String} The content type of the request, default is `application/x-www-form-urlencoded`\n    *\n    */\n\n  /**\n    * Removes leading and trailing whitespace.\n    * @param {String}\n    * @return {String}\n    */\n  var trim = ''.trim\n    ? function(s) { return s.trim(); }\n    : function(s) { return s.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''); };\n\n  function xhr() {\n    if (typeof XMLHttpRequest !== 'undefined' && (window.location.protocol !== 'file:' || !window.ActiveXObject)) {\n      return new XMLHttpRequest();\n    } else {\n      try {\n        return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n      } catch(e) { }\n      try {\n        return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n      } catch(e) { }\n      try {\n        return new ActiveXObject('Msxml2.XMLHTTP');\n      } catch(e) { }\n    }\n    return false;\n  }\n\n  function successfulRequest(request) {\n    return (request.status >= 200 && request.status < 300) ||\n        request.status == 304 ||\n        (request.status == 0 && request.responseText);\n  }\n\n  /**\n    * Serialize JavaScript for HTTP requests.\n    *\n    * @param {Object} object An Array or Object\n    * @returns {String} A string suitable for a GET or POST request\n    */\n  net.serialize = function(object) {\n    if (!object) return;\n\n    if (typeof object === 'string') {\n      return object;\n    }\n\n    var results = [];\n    for (var key in object) {\n      results.push(encodeURIComponent(key) + '=' + encodeURIComponent(object[key]));\n    }\n    return results.join('&');\n  };\n\n  /**\n    * JSON.parse support can be inferred using `connectsdk.detect('JSON.parse')`.\n    */\n  //connectsdk.addDetectionTest('JSON.parse', function() {\n  //  return window.JSON && window.JSON.parse;\n  //});\n\n  /**\n    * Parses JSON represented as a string.\n    *\n    * @param {String} string The original string\n    * @returns {Object} A JavaScript object\n    */\n  net.parseJSON = function(string) {\n    if (typeof string !== 'string' || !string) return null;\n    string = trim(string);\n    /*\n    return connectsdk.detect('JSON.parse') ?\n      window.JSON.parse(string) :\n      (new Function('return ' + string))();\n    */\n    return window.JSON.parse(string);\n  };\n\n  /**\n    * Parses XML represented as a string.\n    *\n    * @param {String} string The original string\n    * @returns {Object} A JavaScript object\n    */\n  if (window.DOMParser) {\n    net.parseXML = function(text) {\n      return new DOMParser().parseFromString(text, 'text/xml');\n    };\n  } else {\n    net.parseXML = function(text) {\n      var xml = new ActiveXObject('Microsoft.XMLDOM');\n      xml.async = 'false';\n      xml.loadXML(text);\n      return xml;\n    };\n  }\n\n  /**\n    * Creates an Ajax request.  Returns an object that can be used\n    * to chain calls.  For example:\n    *\n    *      $t.post('/post-test')\n    *        .data({ key: 'value' })\n    *        .end(function(res) {\n    *          assert.equal('value', res.responseText);\n    *        });\n    *\n    *      $t.get('/get-test')\n    *        .set('Accept', 'text/html')\n    *        .end(function(res) {\n    *          assert.equal('Sample text', res.responseText);\n    *        });\n    *\n    * The available chained methods are:\n    *\n    * `set` -- set a HTTP header\n    * `data` -- the postBody\n    * `end` -- send the request over the network, and calls your callback with a `res` object\n    * `send` -- sends the request and calls `data`: `.send({ data: value }, function(res) { });`\n    *\n    * @param {String} The URL to call\n    * @param {Object} Optional settings\n    * @returns {Object} A chainable object for further configuration\n    */\n  function ajax(url, options) {\n    var request = xhr(),\n        promise,\n        then,\n        response = {},\n        chain;\n    if (connectsdk.Promise) {\n      promise = new connectsdk.Promise();\n    }\n\n\n    function respondToReadyState(readyState) {\n      if (request.readyState == 4) {\n        var contentType = request.mimeType || request.getResponseHeader('content-type') || '';\n\n        response.status = request.status;\n        response.responseText = request.responseText;\n        if (/json/.test(contentType)) {\n          response.responseJSON = net.parseJSON(request.responseText);\n        } else if (/xml/.test(contentType)) {\n          response.responseXML = net.parseXML(request.responseText);\n      \t}\n\n        response.success = successfulRequest(request);\n\n        if (options.callback) {\n          return options.callback(response, request);\n        }\n\n        if (response.success) {\n          if (options.success) options.success(response, request);\n          if (promise) promise.resolve(response, request);\n        } else {\n          if (options.error) options.error(response, request);\n          if (promise) promise.reject(response, request);\n        }\n      }\n    }\n\n    // Set the HTTP headers\n    function setHeaders() {\n      var defaults = {\n        'Accept': 'text/javascript, application/json, text/html, application/xml, text/xml, */*',\n        'Content-Type': 'application/json'\n      };\n\n      /**\n       * Merge headers with defaults.\n       */\n      for (var name in defaults) {\n        if (!options.headers.hasOwnProperty(name))\n          options.headers[name] = defaults[name];\n      }\n      for (var name in options.headers) {\n        request.setRequestHeader(name, options.headers[name]);\n      }\n\n    }\n\n    if (typeof options === 'undefined') options = {};\n\n    options.method = options.method ? options.method.toLowerCase() : 'get';\n    options.asynchronous = options.asynchronous || true;\n    options.postBody = options.postBody || '';\n    request.onreadystatechange = respondToReadyState;\n    request.open(options.method, url, options.asynchronous);\n\n    options.headers = options.headers || {};\n    if (options.contentType) {\n      options.headers['Content-Type'] = options.contentType;\n    }\n\n    if (typeof options.postBody !== 'string') {\n      // Serialize JavaScript\n      options.postBody = net.serialize(options.postBody);\n    }\n\n    // setHeaders();\n\n    function send() {\n      try {\n      \tsetHeaders();\n        request.send(options.postBody);\n      } catch (e) {\n        if (options.error) {\n          options.error();\n        }\n      }\n    }\n\n    chain = {\n      set: function(key, value) {\n        options.headers[key] = value;\n        return chain;\n      },\n\n      send: function(data, callback) {\n        options.postBody = net.serialize(data);\n        options.callback = callback;\n        send();\n        return chain;\n      },\n\n      end: function(callback) {\n        options.callback = callback;\n        send();\n        return chain;\n      },\n\n      data: function(data) {\n        options.postBody = net.serialize(data);\n        return chain;\n      },\n\n      then: function() {\n        chain.end();\n        if (promise) promise.then.apply(promise, arguments);\n        return chain;\n      }\n    };\n\n    return chain;\n  }\n\n  function JSONPCallback(url, success, failure) {\n    var self = this;\n    this.url = url;\n    this.methodName = '__connectsdk_jsonp_' + parseInt(new Date().getTime());\n    this.success = success;\n    this.failure = failure;\n\n    function runCallback(json) {\n      self.success(json);\n      self.teardown();\n    }\n\n    window[this.methodName] = runCallback;\n  }\n\n  JSONPCallback.prototype.run = function() {\n    this.scriptTag = document.createElement('script');\n    this.scriptTag.id = this.methodName;\n    this.scriptTag.src = this.url.replace('{callback}', this.methodName);\n    var that = this;\n    this.scriptTag.onerror = function() {\n    \tthat.failure();\n    };\n    document.body.appendChild(this.scriptTag);\n  };\n\n  JSONPCallback.prototype.teardown = function() {\n    window[this.methodName] = null;\n    try {\n    \tdelete window[this.methodName];\n    } catch (e) {}\n    if (this.scriptTag) {\n      document.body.removeChild(this.scriptTag);\n    }\n  };\n\n  /**\n   * An Ajax GET request.\n   *\n   *      $t.get('/get-test')\n   *        .set('Accept', 'text/html')\n   *        .end(function(res) {\n   *          assert.equal('Sample text', res.responseText);\n   *        });\n   *\n   * @param {String} url The URL to request\n   * @param {Object} options The Ajax request options\n   * @returns {Object} A chainable object for further configuration\n   */\n  net.get = function(url, options) {\n    if (typeof options === 'undefined') options = {};\n    options.method = 'get';\n    return ajax(url, options);\n  };\n\n  /**\n   * An Ajax POST request.\n   *\n   *      $t.post('/post-test')\n   *        .data({ key: 'value' })\n   *        .end(function(res) {\n   *          assert.equal('value', res.responseText);\n   *        });\n   *\n   * @param {String} url The URL to request\n   * @param {Object} options The Ajax request options (`postBody` may come in handy here)\n   * @returns {Object} An object for further chaining with promises\n   */\n  net.post = function(url, options) {\n    if (typeof options === 'undefined') options = {};\n    options.method = 'post';\n    return ajax(url, options);\n  };\n\n  /**\n   * A jsonp request.  Example:\n   *\n   *     var url = 'http://feeds.delicious.com/v1/json/';\n   *     url += 'alex_young/javascript?callback={callback}';\n   *\n   *     connectsdk.net.jsonp(url, {\n   *       success: function(json) {\n   *         console.log(json);\n   *       }\n   *     });\n   *\n   * @param {String} url The URL to request\n   */\n  net.jsonp = function(url, options) {\n    if (typeof options === 'undefined') options = {};\n    var callback = new JSONPCallback(url, options.success, options.failure);\n    callback.run();\n  };\n\n  /**\n    * The Ajax methods are mapped to the `connectsdk` object:\n    *\n    *      connectsdk.get();\n    *      connectsdk.post();\n    *      connectsdk.json();\n    *\n    */\n  connectsdk.get = net.get;\n  connectsdk.post = net.post;\n  connectsdk.jsonp = net.jsonp;\n\n  net.ajax = ajax;\n  connectsdk.net = net;\n  return net;\n});","define(\"connectsdk.Util\", [\"connectsdk.core\"], function (connectsdk) {\n\n\t// Create a singleton from Util so the same util function can be used in different modules\n\tvar Util = (function () {\n\t\tvar instance;\n\n\t\tfunction createInstance() {\n\t\t\t// private variables to use in the public methods\n\t\t\tvar applePayPaymentProductId = 302;\n\t\t\tvar androidPayPaymentProductId = 320;\n\t\t\tvar bancontactPaymentProductId = 3012;\n\n\t\t\treturn {\n\t\t\t\tapplePayPaymentProductId: applePayPaymentProductId,\n\t\t\t\tandroidPayPaymentProductId: androidPayPaymentProductId,\n\t\t\t\tbancontactPaymentProductId: bancontactPaymentProductId,\n\t\t\t\tgetMetadata: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tscreenSize: window.innerWidth + \"x\" + window.innerHeight,\n\t\t\t\t\t\tplatformIdentifier: window.navigator.userAgent,\n\t\t\t\t\t\tsdkIdentifier: ((document.GC && document.GC.rppEnabledPage) ? 'rpp-' : '') + 'JavaScriptClientSDK/v${version}',\n\t\t\t\t\t\tsdkCreator: 'Ingenico'\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tbase64Encode: function (data) {\n\t\t\t\t\tif (typeof data === \"object\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tdata = JSON.stringify(data);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tthrow \"data must be either a String or a JSON object\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\t\t\t\tvar o1, o2, o3, h1, h2, h3, h4, bits, i = 0, ac = 0, enc = '', tmp_arr = [];\n\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t}\n\n\t\t\t\t\tdo {// pack three octets into four hexets\n\t\t\t\t\t\to1 = data.charCodeAt(i++);\n\t\t\t\t\t\to2 = data.charCodeAt(i++);\n\t\t\t\t\t\to3 = data.charCodeAt(i++);\n\n\t\t\t\t\t\tbits = o1 << 16 | o2 << 8 | o3;\n\n\t\t\t\t\t\th1 = bits >> 18 & 0x3f;\n\t\t\t\t\t\th2 = bits >> 12 & 0x3f;\n\t\t\t\t\t\th3 = bits >> 6 & 0x3f;\n\t\t\t\t\t\th4 = bits & 0x3f;\n\n\t\t\t\t\t\t// use hexets to index into b64, and append result to encoded string\n\t\t\t\t\t\ttmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n\t\t\t\t\t} while (i < data.length);\n\n\t\t\t\t\tenc = tmp_arr.join('');\n\n\t\t\t\t\tvar r = data.length % 3;\n\n\t\t\t\t\treturn (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\t\t\t\t},\n\t\t\t\tfilterOutProductsThatAreNotSupportedInThisBrowser: function (json) {\n\t\t\t\t\tfor (var i = json.paymentProducts.length - 1, il = 0; i >= il; i--) {\n\t\t\t\t\t\tvar product = json.paymentProducts[i];\n\t\t\t\t\t\tif (product && this.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(product.id) > -1) {\n\t\t\t\t\t\t\tjson.paymentProducts.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpaymentProductsThatAreNotSupportedInThisBrowser: [applePayPaymentProductId]\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetInstance: function () {\n\t\t\t\tif (!instance) {\n\t\t\t\t\tinstance = createInstance();\n\t\t\t\t}\n\t\t\t\treturn instance;\n\t\t\t}\n\t\t};\n\t})();\n\n\tconnectsdk.Util = Util;\n\treturn Util;\n});","define(\"connectsdk.AndroidPay\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.Util\"], function (connectsdk, Promise, Util) {\n\n    var _util = Util.getInstance();\n    var _C2SCommunicator = null;\n    var _paymentProductSpecificInputs = null;\n    var _context = null;\n\n    var setupRequestMethodData = function (networks, publicKey) {\n        var androidPayEnvironment = 'TEST';\n        if (_context.environment === 'PROD') {\n            androidPayEnvironment = 'PROD';\n        }\n        var methodData = [{\n            supportedMethods: ['https://android.com/pay'],\n            data: {\n                merchantId: _paymentProductSpecificInputs.androidPay.merchantId,\n                environment: androidPayEnvironment,\n                allowedCardNetworks: networks,\n                paymentMethodTokenizationParameters: {\n                    tokenizationType: 'NETWORK_TOKEN',\n                    parameters: {\n                        'publicKey': publicKey\n                    }\n                }\n            }\n        }];\n        return methodData;\n    }\n\n    var setupRequestDetails = function () {\n        var totalAmount = (_context.totalAmount / 100).toFixed(2);\n\n        var details = {\n            total: {\n                label: 'Total',\n                amount: {\n                    currency: _context.currency,\n                    value: totalAmount\n                }\n            }\n        };\n        return details;\n    }\n\n    var setupRequestOptions = function () {\n        var options = {\n            requestShipping: false,\n            requestPayerEmail: false,\n            requestPayerPhone: false,\n            requestPayerName: false\n        };\n        return options;\n    }\n\n    var _doCanMakePayment = function (jsonNetworks, jsonPublicKey) {\n        var promise = new Promise();\n\n        var methodData = setupRequestMethodData(jsonNetworks.networks, jsonPublicKey.publicKey);\n        var details = setupRequestDetails();\n        var options = setupRequestOptions();\n        var request = new PaymentRequest(methodData, details, options);\n        setTimeout(function () {\n            // When the PRAPI is available, it does not mean the canMakePayment() method is also implemented.\n            if (request.canMakePayment) {\n                request.canMakePayment().then(function (result) {\n                    if (result) {\n                        promise.resolve(true);\n                    } else {\n                        promise.resolve(false);\n                    }\n                })['catch'](function (error) { // we use ['catch'] notation intead of .catch because of IE8 compatibility\n                    promise.reject(error);\n                });\n            } else {\n                promise.resolve(true);\n            }\n        });\n        return promise;\n    }\n\n    var _checkPaymentProductPublicKey = function () {\n        var promise = new Promise();\n        _C2SCommunicator.getPaymentProductPublicKey(_util.androidPayPaymentProductId).then(function (jsonPublicKey) {\n            promise.resolve(jsonPublicKey);\n        }, function () {\n            promise.reject();\n        });\n        return promise;\n    }\n\n    var _checkPaymentProductNetworks = function () {\n        var promise = new Promise();\n        _C2SCommunicator.getPaymentProductNetworks(_util.androidPayPaymentProductId, _context).then(function (jsonNetworks) {\n            if (jsonNetworks.networks && jsonNetworks.networks.length > 0) {\n                promise.resolve(jsonNetworks);\n            } else {\n                promise.reject();\n            }\n        }, function () {\n            promise.reject();\n        });\n        return promise;\n    }\n\n    var _isPaymentRequestAPIAvailable = function () {\n        return window && window.PaymentRequest;\n    }\n\n    this.AndroidPay = function (C2SCommunicator) {\n        _C2SCommunicator = C2SCommunicator;\n        this.isAndroidPayAvailable = function (context, paymentProductSpecificInputs) {\n            _context = context;\n            _paymentProductSpecificInputs = paymentProductSpecificInputs;\n            var promise = new Promise();\n            setTimeout(function () {\n                if (_isPaymentRequestAPIAvailable()) {\n                    _checkPaymentProductNetworks().then(function (jsonNetworks) {\n                        _checkPaymentProductPublicKey().then(function (jsonPublicKey) {\n                            _doCanMakePayment(jsonNetworks, jsonPublicKey).then(function (isAndroidPayAvailable) {\n                                if (!isAndroidPayAvailable) {\n                                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\n                                }\n                                promise.resolve(isAndroidPayAvailable);\n                            }, function () {\n                                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\n                                promise.reject('failed to run canMakePayment() check with the payment request API');\n                            });\n                        }, function () {\n                            _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\n                            promise.reject('failed to retrieve payment product publickey');\n                        });\n                    }, function () {\n                        _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\n                        promise.reject('failed to retrieve paymentproduct networks');\n                    });\n                } else {\n                    _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\n                    promise.reject('Payment Request API is not available');\n                }\n            });\n            return promise;\n        }\n\n        this.isMerchantIdProvided = function (paymentProductSpecificInputs) {\n            if (paymentProductSpecificInputs.androidPay.merchantId) {\n                return paymentProductSpecificInputs.androidPay.merchantId;\n            } else {\n                _util.paymentProductsThatAreNotSupportedInThisBrowser.push(_util.androidPayPaymentProductId);\n                return false;\n            }\n        }\n    };\n    connectsdk.AndroidPay = this.AndroidPay;\n    return this.AndroidPay;\n});\n","define(\"connectsdk.PublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar PublicKeyResponse = function(json) {\n\t\tthis.json = json;\n\t\tthis.keyId = json.keyId;\n\t\tthis.publicKey = json.publicKey;\n\t};\n\n\tconnectsdk.PublicKeyResponse = PublicKeyResponse;\n\treturn PublicKeyResponse;\n});","define(\"connectsdk.PaymentProductPublicKeyResponse\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar PaymentProductPublicKeyResponse = function(json) {\n\t\tthis.json = json;\n\t\tthis.keyId = json.keyId;\n\t\tthis.publicKey = json.publicKey;\n\t};\n\n\tconnectsdk.PaymentProductPublicKeyResponse = PaymentProductPublicKeyResponse;\n\treturn PaymentProductPublicKeyResponse;\n});","define(\"connectsdk.C2SCommunicatorConfiguration\", [\"connectsdk.core\"], function(connectsdk) {\n\n    var C2SCommunicatorConfiguration = function (sessionDetails) {\n        this.endpoints = {\n                            PROD: {\n                                EU: {\n                                    API: \"https://ams1.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay1.secured-by-ingenico.com\"\n                                }\n                                ,US: {\n                                    API: \"https://us.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay2.secured-by-ingenico.com\"\n                                }\n                                ,AMS: {\n                                    API: \"https://ams2.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay3.secured-by-ingenico.com\"\n                                }\n                                ,PAR: {\n                                    API: \"https://par.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay4.secured-by-ingenico.com\"\n                                }\n                            }\n                            ,PREPROD: {\n                                EU: {\n                                    API: \"https://ams1.preprod.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay1.preprod.secured-by-ingenico.com\"\n                                }\n                                ,US: {\n                                    API: \"https://us.preprod.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay2.preprod.secured-by-ingenico.com\"\n                                }\n                                ,AMS: {\n                                    API: \"https://ams2.preprod.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay3.preprod.secured-by-ingenico.com\"\n                                }\n                                ,PAR: {\n                                    API: \"https://par-preprod.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay4.preprod.secured-by-ingenico.com\"\n                                }\n                            }\n                            ,SANDBOX: {\n                                EU: {\n                                    API: \"https://ams1.sandbox.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay1.sandbox.secured-by-ingenico.com\"\n                                }\n                                ,US: {\n                                    API: \"https://us.sandbox.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay2.sandbox.secured-by-ingenico.com\"\n                                }\n                                ,AMS: {\n                                    API: \"https://ams2.sandbox.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay3.sandbox.secured-by-ingenico.com\"\n                                }\n                                ,PAR: {\n                                    API: \"https://par.sandbox.api-ingenico.com/client/v1\"\n                                    ,ASSETS: \"https://assets.pay4.sandbox.secured-by-ingenico.com\"\n                                }\n                            }\n\n                            // Non public settings. Only needed in GC development environment. Do not use\n                            // these, they will not work outside GC.\n                            ,INTEGRATION: {\n                                EU: {\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\n                                }\n                                ,US: {\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\n                                }\n                                ,AMS: {\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\n                                }\n                                ,PAR: {\n                                    API: \"https://int-test-api.gcsip.nl:4443/client/v1\"\n                                    ,ASSETS: \"https://assets.int-test-rpp.gcsip.nl:4443\"\n                                }\n                            }\n                            ,DEV_NAMI: {\n                                EU: {\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\n                                }\n                                ,US: {\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\n                                }\n                                ,AMS: {\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\n                                }\n                                ,PAR: {\n                                    API: \"https://nami-test-api.gcsip.nl:4443/client/v1\"\n                                    ,ASSETS: \"https://assets.nami-test-rpp.gcsip.nl:4443\"\n                                }\n                            }\n                            ,DEV_ISC: {\n                                EU: {\n                                    API: \"//api.gc-dev.isaac.local/client/v1\"\n                                    ,ASSETS: \"//rpp.gc-dev.isaac.local\"\n                                }\n                                ,US: {\n                                    API: \"//api.gc-ci-dev.isaac.local/client/v1\"\n                                    ,ASSETS: \"//rpp.gc-ci-dev.isaac.local\"\n                                }\n                                ,AMS: {\n                                    API: \"//api.gc-dev.isaac.local/client/v1\"\n                                    ,ASSETS: \"//rpp.gc-dev.isaac.local\"\n                                }\n                                ,PAR: {\n                                    API: \"//api.gc-dev.isaac.local/client/v1\"\n                                    ,ASSETS: \"//rpp.gc-dev.isaac.local\"\n                                }\n                            }\n                        };\n\n        this.region = sessionDetails.region;\n        this.environment = sessionDetails.environment || 'RPP'; // in case this is used in the RPP; the RPP will override the endpoints; by using the apiBaseUrl\n        this.clientSessionId = sessionDetails.clientSessionID;\n        this.customerId = sessionDetails.customerId;\n        this.apiBaseUrl = (sessionDetails.apiBaseUrl || sessionDetails.apiBaseUrl === '') ? sessionDetails.apiBaseUrl : this.endpoints[this.environment][this.region].API;\n        this.assetsBaseUrl = (sessionDetails.assetsBaseUrl || sessionDetails.assetsBaseUrl === '' ) ? sessionDetails.assetsBaseUrl : this.endpoints[this.environment][this.region].ASSETS;\n    };\n\n    connectsdk.C2SCommunicatorConfiguration = C2SCommunicatorConfiguration;\n    return C2SCommunicatorConfiguration;\n});","define(\"connectsdk.IinDetailsResponse\", [\"connectsdk.core\", \"connectsdk.promise\"], function(connectsdk, Promise) {\n\n\tvar IinDetailsResponse = function () {\n\t\tthis.status = '';\n\t\tthis.countryCode = '';\n\t\tthis.paymentProductId = '';\n\t\tthis.isAllowedInContext = '';\n\t\tthis.coBrands = [];\n\t};\n\tconnectsdk.IinDetailsResponse = IinDetailsResponse;\n\treturn IinDetailsResponse;\n});","define(\"connectsdk.C2SCommunicator\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.net\", \"connectsdk.Util\", \"connectsdk.PublicKeyResponse\", \"connectsdk.PaymentProductPublicKeyResponse\", \"connectsdk.IinDetailsResponse\", \"connectsdk.AndroidPay\"], function (connectsdk, Promise, Net, Util, PublicKeyResponse, PaymentProductPublicKeyResponse, IinDetailsResponse, AndroidPay) {\n\tvar C2SCommunicator = function (c2SCommunicatorConfiguration, paymentProduct) {\n\t\tvar _c2SCommunicatorConfiguration = c2SCommunicatorConfiguration;\n\t\tvar _util = Util.getInstance();\n\t\tvar _cache = {};\n\t\tvar _providedPaymentProduct = paymentProduct;\n\t\tvar that = this;\n\t\tvar _AndroidPay = new AndroidPay(that);\n\n\t\tvar _mapType = {\n\t\t\t\"expirydate\": \"tel\",\n\t\t\t\"string\": \"text\",\n\t\t\t\"numericstring\": \"tel\",\n\t\t\t\"integer\": \"number\",\n\t\t\t\"expirationDate\": \"tel\"\n\t\t};\n\n\t\tvar _cleanJSON = function (json, url) {\n\t\t\tfor (var i = 0, il = json.fields.length; i < il; i++) {\n\t\t\t\tvar field = json.fields[i];\n\t\t\t\tfield.type = (field.displayHints.obfuscate) ? \"password\" : _mapType[field.type];\n\n\t\t\t\t// helper code for templating tools like Handlebars\n\t\t\t\tfor (validatorKey in field.dataRestrictions.validators) {\n\t\t\t\t\tfield.validators = field.validators || [];\n\t\t\t\t\tfield.validators.push(validatorKey);\n\t\t\t\t}\n\t\t\t\tif (field.displayHints.formElement && field.displayHints.formElement.type === 'list') {\n\t\t\t\t\tfield.displayHints.formElement.list = true;\n\t\t\t\t}\n\n\t\t\t\t// full image paths\n\t\t\t\tif (field.displayHints.tooltip && field.displayHints.tooltip.image) {\n\t\t\t\t\tfield.displayHints.tooltip.image = url + \"/\" + field.displayHints.tooltip.image;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// The server orders in a different way, so we apply the sortorder\n\t\t\tjson.fields.sort(function (a, b) {\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\t// set full image path\n\t\t\tjson.displayHints.logo = url + \"/\" + json.displayHints.logo;\n\t\t\treturn json;\n\t\t};\n\n\t\tvar _extendLogoUrl = function (json, url, postfix) {\n\t\t\tfor (var i = 0, il = json[\"paymentProduct\" + postfix].length; i < il; i++) {\n\t\t\t\tvar product = json[\"paymentProduct\" + postfix][i];\n\t\t\t\tproduct.displayHints.logo = url + \"/\" + product.displayHints.logo;\n\t\t\t}\n\t\t\tjson[\"paymentProduct\" + postfix].sort(function (a, b) {\n\t\t\t\tif (a.displayHints.displayOrder < b.displayHints.displayOrder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 1;\n\t\t\t});\n\t\t\treturn json;\n\t\t};\n\n\t\tvar _isPaymentProductInList = function (list, paymentProductId) {\n\t\t\tfor (var i = list.length - 1, il = 0; i >= il; i--) {\n\t\t\t\tvar product = list[i];\n\t\t\t\tif (product && (product.id === paymentProductId)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tvar metadata = _util.getMetadata();\n\n\t\tthis.getBasicPaymentProducts = function (context, paymentProductSpecificInputs) {\n\t\t\tvar paymentProductSpecificInputs = paymentProductSpecificInputs || {};\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheBust = new Date().getTime()\n\t\t\t\t, cacheKey = \"getPaymentProducts-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\n\t\t\t\t\t+ context.locale + \"_\" + context.isRecurring + \"_\" + context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t+ \"/products\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\n\t\t\t\t\t+ \"&hide=fields&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetsBaseUrl, \"s\");\n\t\t\t\t\t\t\tif (_isPaymentProductInList(json.paymentProducts, _util.androidPayPaymentProductId)) {\n\t\t\t\t\t\t\t\tif (_AndroidPay.isMerchantIdProvided(paymentProductSpecificInputs)) {\n\t\t\t\t\t\t\t\t\t_AndroidPay.isAndroidPayAvailable(context, paymentProductSpecificInputs).then(function (isAndroidPayAvailable) {\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\n\t\t\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\n\t\t\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(json);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//AndroidPay does not have merchantId\n\t\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\n\t\t\t\t\t\t\t\t\tconsole.warn('You have not provided a merchantId for Android Pay, you can set this in the paymentProductSpecificInputs object');\n\t\t\t\t\t\t\t\t\tpromise.resolve(json);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t_util.filterOutProductsThatAreNotSupportedInThisBrowser(json);\n\t\t\t\t\t\t\t\tif (json.paymentProducts.length === 0) {\n\t\t\t\t\t\t\t\t\tpromise.reject('No payment products available');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_cache[cacheKey] = json;\n\t\t\t\t\t\t\t\tpromise.resolve(json);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject('failed to retrieve Basic Payment Products', res);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getBasicPaymentProductGroups = function (context) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheBust = new Date().getTime()\n\t\t\t\t, cacheKey = \"getPaymentProductGroups-\" + context.totalAmount + \"_\" + context.countryCode + \"_\"\n\t\t\t\t\t+ context.locale + \"_\" + context.isRecurring + \"_\" + context.currency;\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t+ \"/productgroups\" + \"?countryCode=\" + context.countryCode + \"&isRecurring=\" + context.isRecurring\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&currencyCode=\" + context.currency\n\t\t\t\t\t+ \"&hide=fields&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tvar json = _extendLogoUrl(res.responseJSON, _c2SCommunicatorConfiguration.assetsBaseUrl, \"Groups\");\n\t\t\t\t\t\t\t_cache[cacheKey] = json;\n\t\t\t\t\t\t\tpromise.resolve(json);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProduct = function (paymentProductId, context, paymentProductSpecificInputs) {\n\t\t\tvar paymentProductSpecificInputs = paymentProductSpecificInputs || {};\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheBust = new Date().getTime()\n\t\t\t\t, cacheKey = \"getPaymentProduct-\" + paymentProductId + \"_\" + context.totalAmount + \"_\"\n\t\t\t\t\t+ context.countryCode + \"_\" + \"_\" + context.locale + \"_\" + context.isRecurring + \"_\"\n\t\t\t\t\t+ context.currency + \"_\" + JSON.stringify(paymentProductSpecificInputs);\n\t\t\tif (_util.paymentProductsThatAreNotSupportedInThisBrowser.indexOf(paymentProductId) > -1) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.reject({\n\t\t\t\t\t\t\"errorId\": \"48b78d2d-1b35-4f8b-92cb-57cc2638e901\",\n\t\t\t\t\t\t\"errors\": [{\n\t\t\t\t\t\t\t\"code\": \"1007\",\n\t\t\t\t\t\t\t\"propertyName\": \"productId\",\n\t\t\t\t\t\t\t\"message\": \"UNKNOWN_PRODUCT_ID\",\n\t\t\t\t\t\t\t\"httpStatusCode\": 404\n\t\t\t\t\t\t}]\n\t\t\t\t\t});\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductId) {\n\t\t\t\t\tif (_cache[cacheKey]) {\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetsBaseUrl);\n\t\t\t\t\t\t_cache[cacheKey] = json;\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t} else if (_cache[cacheKey]) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t\t}, 0);\n\t\t\t\t} else {\n\t\t\t\t\tvar getPaymentProductUrl = _c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t\t+ \"/products/\" + paymentProductId + \"?countryCode=\" + context.countryCode\n\t\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\n\t\t\t\t\t\t+ \"&currencyCode=\" + context.currency + \"&locale=\" + context.locale;\n\n\t\t\t\t\tif ((paymentProductId === _util.bancontactPaymentProductId) &&\n\t\t\t\t\tpaymentProductSpecificInputs &&\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact &&\n\t\t\t\t\tpaymentProductSpecificInputs.bancontact.forceBasicFlow) {\n\t\t\t\t\t\t// Add query parameter to products call to force basic flow for bancontact\n\t\t\t\t\t\tgetPaymentProductUrl += \"&forceBasicFlow=\" + paymentProductSpecificInputs.bancontact.forceBasicFlow\n\t\t\t\t\t}\n\n\t\t\t\t\tgetPaymentProductUrl += \"&cacheBust=\" + cacheBust;\n\n\t\t\t\t\tNet.get(getPaymentProductUrl)\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetsBaseUrl);\n\t\t\t\t\t\t\t\tif (paymentProductId === _util.androidPayPaymentProductId) {\n\t\t\t\t\t\t\t\t\tif (_AndroidPay.isMerchantIdProvided(paymentProductSpecificInputs)) {\n\t\t\t\t\t\t\t\t\t\t_AndroidPay.isAndroidPayAvailable(context, paymentProductSpecificInputs).then(function (isAndroidPayAvailable) {\n\t\t\t\t\t\t\t\t\t\t\tif (isAndroidPayAvailable) {\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\n\t\t\t\t\t\t\t\t\t\t\t\t//_isAndroidPayAvailable returned false so android pay is not available, so reject getPaymentProduct\n\t\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\n\t\t\t\t\t\t\t\t\t\t\t//_isAndroidPayAvailable rejected so not available\n\t\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\n\t\t\t\t\t\t\t\t\t\t// merchantId is not provided so reject\n\t\t\t\t\t\t\t\t\t\tpromise.reject(cleanedJSON);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\n\t\t\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpromise.reject('failed to retrieve Payment Product', res);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductGroup = function (paymentProductGroupId, context) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheBust = new Date().getTime()\n\t\t\t\t, cacheKey = \"getPaymentProductGroup-\" + paymentProductGroupId + \"_\" + context.totalAmount + \"_\"\n\t\t\t\t\t+ context.countryCode + \"_\" + \"_\" + context.locale + \"_\" + context.isRecurring + \"_\"\n\t\t\t\t\t+ context.currency;\n\t\t\tif (_providedPaymentProduct && _providedPaymentProduct.id === paymentProductGroupId) {\n\t\t\t\tif (_cache[cacheKey]) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t\t}, 0);\n\t\t\t\t} else {\n\t\t\t\t\tvar json = _cleanJSON(_providedPaymentProduct, _c2SCommunicatorConfiguration.assetsBaseUrl);\n\t\t\t\t\t_cache[cacheKey] = json;\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t} else if (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t+ \"/productgroups/\" + paymentProductGroupId + \"?countryCode=\" + context.countryCode\n\t\t\t\t\t+ \"&isRecurring=\" + context.isRecurring + \"&amount=\" + context.totalAmount\n\t\t\t\t\t+ \"&currencyCode=\" + context.currency + \"&locale=\" + context.locale + \"&cacheBust=\" + cacheBust)\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tvar cleanedJSON = _cleanJSON(res.responseJSON, c2SCommunicatorConfiguration.assetsBaseUrl);\n\t\t\t\t\t\t\t_cache[cacheKey] = cleanedJSON;\n\t\t\t\t\t\t\tpromise.resolve(cleanedJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductIdByCreditCardNumber = function (partialCreditCardNumber, context) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, iinDetailsResponse = new IinDetailsResponse()\n\t\t\t\t, cacheKey = \"getPaymentProductIdByCreditCardNumber-\" + partialCreditCardNumber;\n\n\t\t\tvar that = this;\n\t\t\tthis.context = context;\n\t\t\tif (_cache[cacheKey]) {// cache is based on digit 1-6\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tvar isEnoughDigits = function (partialCreditCardNumber) {\n\t\t\t\t\tif (partialCreditCardNumber.length < 6) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t\tif (isEnoughDigits(partialCreditCardNumber)) {\n\t\t\t\t\tNet.post(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/services/getIINdetails\")\n\t\t\t\t\t\t.data(JSON.stringify(this.convertContextToIinDetailsContext(partialCreditCardNumber, this.context)))\n\t\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t\tiinDetailsResponse.json = res.responseJSON;\n\t\t\t\t\t\t\t\tiinDetailsResponse.countryCode = res.responseJSON.countryCode;\n\t\t\t\t\t\t\t\tiinDetailsResponse.paymentProductId = res.responseJSON.paymentProductId;\n\t\t\t\t\t\t\t\tiinDetailsResponse.isAllowedInContext = res.responseJSON.isAllowedInContext;\n\t\t\t\t\t\t\t\tiinDetailsResponse.coBrands = res.responseJSON.coBrands;\n\t\t\t\t\t\t\t\t// check if this card is supported\n\t\t\t\t\t\t\t\t// if isAllowedInContext is available in the response set status and resolve\n\t\t\t\t\t\t\t\tif (res.responseJSON.hasOwnProperty('isAllowedInContext')) {\n\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\n\t\t\t\t\t\t\t\t\tif (iinDetailsResponse.isAllowedInContext === false) {\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"EXISTING_BUT_NOT_ALLOWED\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\n\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t//if isAllowedInContext is not available get the payment product again to determine status and resolve\n\t\t\t\t\t\t\t\t\tthat.getPaymentProduct(iinDetailsResponse.paymentProductId, that.context).then(function (paymentProduct) {\n\t\t\t\t\t\t\t\t\t\tif (paymentProduct) {\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"SUPPORTED\";\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNSUPPORTED\";\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t_cache[cacheKey] = iinDetailsResponse;\n\t\t\t\t\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\n\t\t\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\n\t\t\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tiinDetailsResponse.status = \"UNKNOWN\";\n\t\t\t\t\t\t\t\tpromise.reject(iinDetailsResponse);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tiinDetailsResponse.status = \"NOT_ENOUGH_DIGITS\";\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tpromise.resolve(iinDetailsResponse);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.convertContextToIinDetailsContext = function (partialCreditCardNumber, context) {\n\t\t\treturn {\n\t\t\t\t\"bin\": partialCreditCardNumber,\n\t\t\t\t\"paymentContext\": {\n\t\t\t\t\t\"countryCode\": context.countryCode,\n\t\t\t\t\t\"isRecurring\": context.isRecurring,\n\t\t\t\t\t\"amountOfMoney\": {\n\t\t\t\t\t\t\"amount\": context.totalAmount,\n\t\t\t\t\t\t\"currencyCode\": context.currency\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.getPublicKey = function () {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheKey = \"publicKey\";\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/crypto/publickey\")\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tvar publicKeyResponse = new PublicKeyResponse(res.responseJSON);\n\t\t\t\t\t\t\t_cache[cacheKey] = publicKeyResponse;\n\t\t\t\t\t\t\tpromise.resolve(publicKeyResponse);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(\"unable to get public key\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductPublicKey = function (paymentProductId) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheKey = \"paymentProductPublicKey\";\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/publicKey\")\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tvar paymentProductPublicKeyResponse = new PaymentProductPublicKeyResponse(res.responseJSON);\n\t\t\t\t\t\t\t_cache[cacheKey] = paymentProductPublicKeyResponse;\n\t\t\t\t\t\t\tpromise.resolve(paymentProductPublicKeyResponse);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(\"unable to get payment product public key\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t}\n\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, context) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheKey = \"paymentProductNetworks-\" + paymentProductId + \"_\" + context.countryCode + \"_\" + context.currency + \"_\"\n\t\t\t\t\t+ context.totalAmount + \"_\" + context.isRecurring;\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId\n\t\t\t\t\t+ \"/products/\" + paymentProductId + \"/networks\" + \"?countryCode=\" + context.countryCode + \"&currencyCode=\" + context.currency\n\t\t\t\t\t+ \"&amount=\" + context.totalAmount + \"&isRecurring=\" + context.isRecurring)\n\t\t\t\t\t.set('X-GCS-ClientMetaInfo', _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheKey = \"getPaymentProductDirectory-\" + paymentProductId + \"_\" + currencyCode + \"_\" + countryCode;\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/directory?countryCode=\" + countryCode + \"&currencyCode=\" + currencyCode)\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(\"unable to retrieve payment product directory\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.convertAmount = function (amount, source, target) {\n\t\t\tvar promise = new Promise()\n\t\t\t\t, cacheKey = \"convertAmount-\" + amount + \"_\" + source + \"_\" + target;\n\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/services/convert/amount?source=\" + source + \"&target=\" + target + \"&amount=\" + amount)\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(\"unable to convert amount\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\n\t\t\tvar promise = new Promise();\n\n\t\t\tNet.get(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/payments/\" + paymentId + \"/thirdpartystatus\")\n\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t.end(function (res) {\n\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpromise.reject(\"unable to retrieve third party status\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getCustomerDetails = function(paymentProductId, context) {\n\n\t\t\tvar promise = new Promise();\n\t\t\tvar cacheKey = \"getCustomerDetails_\" + context.countryCode;\n\t\t\tcacheKey = constructCacheKeyFromKeyValues(cacheKey, context.values);\n\t\t\tif (_cache[cacheKey]) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tpromise.resolve(_cache[cacheKey]);\n\t\t\t\t}, 0);\n\t\t\t} else {\n\t\t\t\tNet.post(_c2SCommunicatorConfiguration.apiBaseUrl + \"/\" + _c2SCommunicatorConfiguration.customerId + \"/products/\" + paymentProductId + \"/customerDetails\")\n\t\t\t\t\t.data(JSON.stringify(context))\n\t\t\t\t\t.set(\"X-GCS-ClientMetaInfo\", _util.base64Encode(metadata))\n\t\t\t\t\t.set('Authorization', 'GCS v1Client:' + _c2SCommunicatorConfiguration.clientSessionId)\n\t\t\t\t\t.end(function (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\t_cache[cacheKey] = res.responseJSON;\n\t\t\t\t\t\t\tpromise.resolve(res.responseJSON);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpromise.reject(res.responseJSON);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tvar constructCacheKeyFromKeyValues = function(prefix, values) {\n\t\t\tvar cacheKey = prefix;\n\t\t\tfor (var key in values){\n\t\t\t\tif (values.hasOwnProperty(key)) {\n\t\t\t\t\tcacheKey += \"_\" + values[key].key + \"_\" + values[key].value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cacheKey;\n\t\t}\n\t};\n\n\tconnectsdk.C2SCommunicator = C2SCommunicator;\n\treturn C2SCommunicator;\n});","define(\"connectsdk.LabelTemplateElement\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar LabelTemplateElement = function (json) {\n\t\tthis.json = json;\n\t\tthis.attributeKey = json.attributeKey;\n\t\tthis.mask = json.mask;\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\n\t};\n\n\tconnectsdk.LabelTemplateElement = LabelTemplateElement;\n\treturn LabelTemplateElement;\n});","define(\"connectsdk.Attribute\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar Attribute = function (json) {\n\t\tthis.json = json;\n\t\tthis.key = json.key;\n\t\tthis.value = json.value;\n\t\tthis.status = json.status;\n\t\tthis.mustWriteReason = json.mustWriteReason;\n\t};\n\n\tconnectsdk.Attribute = Attribute;\n\treturn Attribute;\n});","define(\"connectsdk.AccountOnFileDisplayHints\", [\"connectsdk.core\", \"connectsdk.LabelTemplateElement\"], function(connectsdk, LabelTemplateElement) {\n\n\tvar _parseJSON = function (_json, _labelTemplate, _labelTemplateElementByAttributeKey) {\n\t\tif (_json.labelTemplate) {\n\t\t\tfor (var i = 0, l = _json.labelTemplate.length; i < l; i++) {\n\t\t\t\tvar labelTemplateElement = new LabelTemplateElement(_json.labelTemplate[i]);\n\t\t\t\t_labelTemplate.push(labelTemplateElement);\n\t\t\t\t_labelTemplateElementByAttributeKey[labelTemplateElement.attributeKey] = labelTemplateElement;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar AccountOnFileDisplayHints = function (json) {\n\t\tthis.json = json;\n\t\tthis.labelTemplate = [];\n\t\tthis.labelTemplateElementByAttributeKey = {};\n\n\t\t_parseJSON(json, this.labelTemplate, this.labelTemplateElementByAttributeKey);\n\t};\n\n\tconnectsdk.AccountOnFileDisplayHints = AccountOnFileDisplayHints;\n\treturn AccountOnFileDisplayHints;\n});","define(\"connectsdk.AccountOnFile\", [\"connectsdk.core\" ,\"connectsdk.AccountOnFileDisplayHints\", \"connectsdk.Attribute\"], function(connectsdk, AccountOnFileDisplayHints, Attribute) {\n\n\tvar _parseJSON = function (_json, _attributes, _attributeByKey) {\n\t\tif (_json.attributes) {\n\t\t\tfor (var i = 0, l = _json.attributes.length; i < l; i++) {\n\t\t\t\tvar attribute = new Attribute(_json.attributes[i]);\n\t\t\t\t_attributes.push(attribute);\n\t\t\t\t_attributeByKey[attribute.key] = attribute;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar AccountOnFile = function (json) {\n\t\tvar that = this;\n\t\tthis.json = json;\n\t\tthis.attributes = [];\n\t\tthis.attributeByKey = {};\n\t\tthis.displayHints = new AccountOnFileDisplayHints(json.displayHints);\n\t\tthis.id = json.id;\n\t\tthis.paymentProductId = json.paymentProductId;\n\n\t\tthis.getMaskedValueByAttributeKey = function(attributeKey) {\n\t\t\tvar value = this.attributeByKey[attributeKey].value;\n\t\t\tvar wildcardMask;\n\t\t\ttry {\n\t\t\t\twildcardMask = this.displayHints.labelTemplateElementByAttributeKey[attributeKey].wildcardMask;\n\t\t\t} catch (e) {}\n\t\t\tif (value !== undefined && wildcardMask !== undefined) {\n\t\t\t\tvar maskingUtil = new connectsdk.MaskingUtil();\n\t\t\t\treturn maskingUtil.applyMask(wildcardMask, value);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\n\t\t_parseJSON(json, this.attributes, this.attributeByKey);\n\t};\n\n\tconnectsdk.AccountOnFile = AccountOnFile;\n\treturn AccountOnFile;\n});","define(\"connectsdk.PaymentProductDisplayHints\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar PaymentProductDisplayHints = function (json) {\n\t\tthis.json = json;\n\t\tthis.displayOrder = json.displayOrder;\n\t\tthis.label = json.label;\n\t\tthis.logo = json.logo;\n\t};\n\n\tconnectsdk.PaymentProductDisplayHints = PaymentProductDisplayHints;\n\treturn PaymentProductDisplayHints;\n});","define(\"connectsdk.BasicPaymentProduct\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\n\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\n\t\tif (_json.accountsOnFile) {\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\n\t\t\t\t_accountsOnFile.push(accountOnFile);\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar BasicPaymentProduct = function (json) {\n\t\tthis.json = json;\n\t\tthis.json.type = \"product\";\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\tthis.allowsRecurring = json.allowsRecurring;\n\t\tthis.allowsTokenization = json.allowsTokenization;\n\t\tthis.autoTokenized  = json.autoTokenized ;\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\n\t\tthis.id = json.id;\n\t\tthis.maxAmount = json.maxAmount;\n\t\tthis.minAmount = json.minAmount;\n\t\tthis.paymentMethod = json.paymentMethod;\n\t\tthis.mobileIntegrationLevel = json.mobileIntegrationLevel;\n\t\tthis.usesRedirectionTo3rdParty = json.usesRedirectionTo3rdParty;\n\t\tthis.paymentProductGroup = json.paymentProductGroup;\n\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\n\t};\n\n\tconnectsdk.BasicPaymentProduct = BasicPaymentProduct;\n\treturn BasicPaymentProduct;\n});","define(\"connectsdk.BasicPaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.AccountOnFile\", \"connectsdk.PaymentProductDisplayHints\"], function(connectsdk, AccountOnFile, PaymentProductDisplayHints) {\n\n\tvar _parseJSON = function (_json, _accountsOnFile, _accountOnFileById) {\n\t\tif (_json.accountsOnFile) {\n\t\t\tfor (var i = 0, il = _json.accountsOnFile.length; i < il; i++) {\n\t\t\t\tvar accountOnFile = new AccountOnFile(_json.accountsOnFile[i]);\n\t\t\t\t_accountsOnFile.push(accountOnFile);\n\t\t\t\t_accountOnFileById[accountOnFile.id] = accountOnFile;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar BasicPaymentProductGroup = function (json) {\n\t\tthis.json = json;\n\t\tthis.json.type = \"group\";\n\t\tthis.id = json.id;\n\t\tthis.displayHints = new PaymentProductDisplayHints(json.displayHints);\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\t_parseJSON(json, this.accountsOnFile, this.accountOnFileById);\n\t};\n\n\tconnectsdk.BasicPaymentProductGroup = BasicPaymentProductGroup;\n\treturn BasicPaymentProductGroup;\n});","define(\"connectsdk.MaskedString\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar MaskedString = function(formattedValue, cursorIndex) {\n\n\t\tthis.formattedValue = formattedValue;\n\t\tthis.cursorIndex = cursorIndex;\n\t};\n\n\tconnectsdk.MaskedString = MaskedString;\n\treturn MaskedString;\n});","define(\"connectsdk.MaskingUtil\", [\"connectsdk.core\", \"connectsdk.MaskedString\"], function(connectsdk, MaskedString) {\n\n\tvar _fillBuffer = function(index, offset, buffer, tempMask, valuec) {\n\t\tif (index+offset < valuec.length && index < tempMask.length) {\n\t\t\tif ((tempMask[index] === \"9\" && Number(valuec[index+offset]) > -1 && valuec[index+offset] !== \" \") || tempMask[index] === \"*\") {\n\t\t\t\tbuffer.push(valuec[index+offset]);\n\t\t\t} else {\n\t\t\t\tif (valuec[index+offset] === tempMask[index]) {\n\t\t\t\t\tbuffer.push(valuec[index+offset]);\n\t\t\t\t} else if (tempMask[index] !== \"9\" && tempMask[index] !== \"*\") {\n\t\t\t\t\tbuffer.push(tempMask[index]);\n\t\t\t\t\toffset--;\n\t\t\t\t} else {\n\t\t\t\t\t// offset++;\n\t\t\t\t\tvaluec.splice(index+offset, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t_fillBuffer(index+1, offset, buffer, tempMask, valuec);\n\t\t}\n\t};\n\n\tvar MaskingUtil = function () {\n\t\tthis.applyMask = function (mask, newValue, oldValue) {\n\t\t\tvar buffer = [],\n\t\t\t\t\tvaluec = newValue.split(\"\");\n\t\t\tif (mask) {\n\t\t\t\tvar maskc = mask.split(\"\"),\n\t\t\t\t\t\ttempMask = [];\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\n\t\t\t\t\tvar c = maskc[i];\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttempMask.push(c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// tempmask now contains the replaceable chars and the non-replaceable masks at the correct index\n\t\t\t\t_fillBuffer(0, 0, buffer, tempMask, valuec);\n\t\t\t} else {\n\t\t\t\t// send back as is\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\n\t\t\t\t\tvar c = valuec[i];\n\t\t\t\t\tbuffer.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tnewValue = buffer.join(\"\");\n\t\t\tvar cursor = 1;\n\t\t\t// calculate the cursor index\n\t\t\tif (oldValue) {\n\t\t\t\tvar tester = oldValue.split(\"\");\n\t\t\t\tfor (var i = 0, il = buffer.length; i < il; i++) {\n\t\t\t\t\tif (buffer[i] !== tester[i]) {\n\t\t\t\t\t\tcursor = i+1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (newValue.substring(0, newValue.length -1) === oldValue) {\n\t\t\t\tcursor = newValue.length + 1;\n\t\t\t}\n\t\t\treturn new MaskedString(newValue, cursor);\n\t\t};\n\t\t\n\t\tthis.getMaxLengthBasedOnMask = function (mask) {\n\t\t\tif (mask) {\n\t\t\t\tvar maskc = mask.split(\"\"),\n\t\t\t\t\t\tnewLength = -1;\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\n\t\t\t\t\tnewLength++;\n\t\t\t\t\tvar c = maskc[i];\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\n\t\t\t\t\t\tnewLength--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn newLength;\n\t\t\t}\n\t\t};\n\n\t\tthis.removeMask = function (mask, value) {\n\t\t\t// remove the mask from the masked input\n\t\t\tvar buffer = [],\n\t\t\t\t\tvaluec = (value) ? value.split(\"\") : [];\n\t\t\tif (mask) {\n\t\t\t\tvar maskc = mask.split(\"\"),\n\t\t\t\t\t\tvalueIndex = -1,\n\t\t\t\t\t\tinMask = false;\n\t\t\t\tfor (var i = 0, il = maskc.length; i < il; i++) {\n\t\t\t\t\tvalueIndex++;\n\t\t\t\t\t// the char '{' and '}' should ALWAYS be ignored\n\t\t\t\t\tvar c = maskc[i];\n\t\t\t\t\tif (c === \"{\" || c === \"}\") {\n\t\t\t\t\t\tvalueIndex--;\n\t\t\t\t\t\tif (c === \"{\") {\n\t\t\t\t\t\t\tinMask = true;\n\t\t\t\t\t\t} else if (c === \"}\") {\n\t\t\t\t\t\t\tinMask = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (inMask && valuec[valueIndex]) {\n\t\t\t\t\t\t\tbuffer.push(valuec[valueIndex]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// send back as is\n\t\t\t\tfor (var i = 0, il = valuec.length; i < il; i++) {\n\t\t\t\t\tvar c = valuec[i];\n\t\t\t\t\tbuffer.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer.join(\"\").trim();\n\t\t};\n\t};\n\n\tconnectsdk.MaskingUtil = MaskingUtil;\n\treturn MaskingUtil;\n});","define(\"connectsdk.ValidationRuleLuhn\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleLuhn = function (json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n\t\tthis.validate = function (value) {\n\t\t\tvar luhnArr = [[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]]\n\t\t\t\t,sum = 0;\n\t\t\t\t\n\t   \t\tvalue.replace(/\\D+/g,\"\").replace(/[\\d]/g, function(c, p, o) {\n\t\t        sum += luhnArr[ (o.length-p)&1 ][ parseInt(c,10) ];\n\t\t    });\n\t\t    return (sum%10 === 0) && (sum > 0);\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleLuhn = ValidationRuleLuhn;\n\treturn ValidationRuleLuhn;\n});","define(\"connectsdk.ValidationRuleExpirationDate\", [\"connectsdk.core\"], function (connectsdk) {\n\n\tvar _validateDateFormat = function (value) {\n\t\tvar pattern = /\\d{4}|\\d{6}$/g;\n\t\treturn pattern.test(value);\n\t};\n\n\tvar ValidationRuleExpirationDate = function (json) {\n\t\tthis.json = json;\n\t\tthis.type = json.type,\n\t\t\tthis.errorMessageId = json.type;\n\n\t\t// value is mmYY or mmYYYY\n\t\tthis.validate = function (value) {\n\t\t\tvalue = value.replace(/[^\\d]/g, '');\n\t\t\tif (value.length === 4) {\n\t\t\t\tsplit = [value.substring(0, 2), \"20\" + value.substring(2, 4)];\n\t\t\t} else if (value.length === 6) {\n\t\t\t\tsplit = [value.substring(0, 2), value.substring(2, 6)];\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (_validateDateFormat(value)) {\n\t\t\t\tvar now = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\n\t\t\t\tvar expirationDate = new Date(split[1], split[0] - 1, 1);\n\t\t\t\tif (expirationDate.getMonth() !== Number(split[0] - 1) || expirationDate.getFullYear() !== Number(split[1])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn expirationDate >= now; // the expiration month could be THIS month but that is still valid!\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleExpirationDate = ValidationRuleExpirationDate;\n\treturn ValidationRuleExpirationDate;\n});","define(\"connectsdk.ValidationRuleFixedList\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleFixedList = function (json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n\t\tthis.allowedValues = json.attributes.allowedValues;\n\t\t\n\t\tthis.validate = function (value) {\n\t\t\tfor (var i = 0, il = this.allowedValues.length; i < il; i++) {\n\t\t\t\tif (this.allowedValues[i] === value) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleFixedList = ValidationRuleFixedList;\n\treturn ValidationRuleFixedList;\n});","define(\"connectsdk.ValidationRuleLength\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleLength = function (json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n        this.maxLength = json.attributes.maxLength;\n\t\tthis.minLength = json.attributes.minLength;\n\t\t\n\t\tthis.validate = function (value) {\n\t\t\treturn this.minLength <= value.length && value.length <= this.maxLength;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleLength = ValidationRuleLength;\n\treturn ValidationRuleLength;\n});","define(\"connectsdk.ValidationRuleRange\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleRange = function(json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n        this.maxValue = json.attributes.maxValue;\n\t\tthis.minValue = json.attributes.minValue;\n\t\t\n\t\tthis.validate = function(value) {\n\t\t\tif (isNaN(value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvalue = Number(value);\n\t\t\treturn this.minValue <= value && value <= this.maxValue;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleRange = ValidationRuleRange;\n\treturn ValidationRuleRange;\n});","define(\"connectsdk.ValidationRuleRegularExpression\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleRegularExpression = function(json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n\t\tthis.regularExpression = json.attributes.regularExpression;\n\t\t\n\t\tthis.validate = function(value) {\n\t\t\tvar regexp = new RegExp(this.regularExpression);\n\t\t\treturn regexp.test(value);\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleRegularExpression = ValidationRuleRegularExpression;\n\treturn ValidationRuleRegularExpression;\n});","define(\"connectsdk.ValidationRuleEmailAddress\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleEmailAddress = function(json) {\n        this.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n        \n\t\tthis.validate = function(value) {\n\t\t\tvar regexp = new RegExp(/^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i);\n\t\t\treturn regexp.test(value);\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleEmailAddress = ValidationRuleEmailAddress;\n\treturn ValidationRuleEmailAddress;\n});","define(\"connectsdk.ValidationRuleBoletoBancarioRequiredness\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValidationRuleBoletoBancarioRequiredness = function (json) {\n\t\tthis.json = json;\n        this.type = json.type,\n        this.errorMessageId = json.type;\n        this.fiscalNumberLength = json.attributes.fiscalNumberLength;\n\t\t\n\t\tthis.validate = function (value, fiscalNumberValue) {\n\t\t\treturn (fiscalNumberValue.length === this.fiscalNumberLength && value.length > 0) || fiscalNumberValue.length !== this.fiscalNumberLength;\n\t\t};\n\t};\n\n\tconnectsdk.ValidationRuleBoletoBancarioRequiredness = ValidationRuleBoletoBancarioRequiredness;\n\treturn ValidationRuleBoletoBancarioRequiredness;\n});","define(\"connectsdk.ValidationRuleFactory\", [\"connectsdk.core\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleBoletoBancarioRequiredness\"], function (connectsdk, ValidationRuleEmailAddress, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleBoletoBancarioRequiredness) {\n\n    var ValidationRuleFactory = function () {\n\n        this.makeValidator = function (json) {\n            // create new class based on the rule\n            try {\n                var classType = json.type.charAt(0).toUpperCase() + json.type.slice(1), // camel casing\n                    className = eval(\"ValidationRule\" + classType);\n                return new className(json);\n            } catch (e) {\n                console.warn('no validator for ', classType);\n            }\n            return null;\n        };\n    };\n\n    connectsdk.ValidationRuleFactory = ValidationRuleFactory;\n    return ValidationRuleFactory;\n});","define(\"connectsdk.DataRestrictions\", [\"connectsdk.core\", \"connectsdk.ValidationRuleExpirationDate\", \"connectsdk.ValidationRuleFixedList\", \"connectsdk.ValidationRuleLength\", \"connectsdk.ValidationRuleLuhn\", \"connectsdk.ValidationRuleRange\", \"connectsdk.ValidationRuleRegularExpression\", \"connectsdk.ValidationRuleEmailAddress\", \"connectsdk.ValidationRuleFactory\"], function(connectsdk, ValidationRuleExpirationDate, ValidationRuleFixedList, ValidationRuleLength, ValidationRuleLuhn, ValidationRuleRange, ValidationRuleRegularExpression, ValidationRuleEmailAddress, ValidationRuleFactory) {\n\n\tvar DataRestrictions = function (json, mask) {\n\n\t\tvar _parseJSON = function (_json, _validationRules, _validationRuleByType) {\n\t\t    var validationRuleFactory = new ValidationRuleFactory();\n\t\t\tif (_json.validators) {\n\t\t\t\tfor (var key in _json.validators) {\n\t\t\t\t\tvar validationRule = validationRuleFactory.makeValidator({type: key, attributes: _json.validators[key]});\n\t\t\t\t\tif (validationRule) {\n\t\t\t\t\t\t_validationRules.push(validationRule);\n\t\t\t\t\t\t_validationRuleByType[validationRule.type] = validationRule;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.json = json;\n\t\tthis.isRequired = json.isRequired;\n\t\tthis.validationRules = [];\n\t\tthis.validationRuleByType = {};\n\t\t\n\t\t_parseJSON(json, this.validationRules, this.validationRuleByType);\n\t};\n\n\tconnectsdk.DataRestrictions = DataRestrictions;\n\treturn DataRestrictions;\n});","define(\"connectsdk.ValueMappingElement\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar ValueMappingElement = function (json) {\n\t\tthis.json = json;\n\t\tthis.displayName = json.displayName;\n\t\tthis.value = json.value;\n\t};\n\n\tconnectsdk.ValueMappingElement = ValueMappingElement;\n\treturn ValueMappingElement;\n});","define(\"connectsdk.FormElement\", [\"connectsdk.core\", \"connectsdk.ValueMappingElement\"], function(connectsdk, ValueMappingElement) {\n\n\tvar FormElement = function (json) {\n\n\t\tvar _parseJSON = function (_json, _valueMapping) {\n\t\t\tif (_json.valueMapping) {\n\t\t\t\tfor (var i = 0, l = _json.valueMapping.length; i < l; i++) {\n\t\t\t\t\t_valueMapping.push(new ValueMappingElement(_json.valueMapping[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.json = json;\n\t\tthis.type = json.type;\n\t\tthis.valueMapping = [];\n\t\t\n\t\t_parseJSON(json, this.valueMapping);\n\t};\n\n\tconnectsdk.FormElement = FormElement;\n\treturn FormElement;\n});","define(\"connectsdk.Tooltip\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar Tooltip = function (json) {\n\t\tthis.json = json;\n\t\tthis.image = json.image;\n\t\tthis.label = json.label;\n\t};\n\n\tconnectsdk.Tooltip = Tooltip;\n\treturn Tooltip;\n});","define(\"connectsdk.PaymentProductFieldDisplayHints\", [\"connectsdk.core\", \"connectsdk.Tooltip\", \"connectsdk.FormElement\"], function(connectsdk, Tooltip, FormElement) {\n\n\tvar PaymentProductFieldDisplayHints = function (json) {\n\t\tthis.json = json;\n \t\tthis.displayOrder = json.displayOrder;\n\t\tif (json.formElement) {\n\t\t\tthis.formElement = new FormElement(json.formElement);\n\t\t}\n\t\tthis.label = json.label;\n\t\tthis.mask = json.mask;\n\t\tthis.obfuscate = json.obfuscate;\n\t\tthis.placeholderLabel = json.placeholderLabel;\n\t\tthis.preferredInputType = json.preferredInputType;\n\t\tthis.tooltip = json.tooltip? new Tooltip(json.tooltip): undefined;\n\t\tthis.alwaysShow = json.alwaysShow;\n\t\tthis.wildcardMask = json.mask ? json.mask.replace(/9/g, \"*\") : \"\";\n\t};\n\n\tconnectsdk.PaymentProductFieldDisplayHints = PaymentProductFieldDisplayHints;\n\treturn PaymentProductFieldDisplayHints;\n});","define(\"connectsdk.PaymentProductField\", [\"connectsdk.core\", \"connectsdk.PaymentProductFieldDisplayHints\", \"connectsdk.DataRestrictions\", \"connectsdk.MaskingUtil\"], function(connectsdk, PaymentProductFieldDisplayHints, DataRestrictions, MaskingUtil) {\n\tvar PaymentProductField = function (json) {\n\t\tthis.json = json;\n\t\tthis.displayHints = new PaymentProductFieldDisplayHints(json.displayHints);\n\t\tthis.dataRestrictions = new DataRestrictions(json.dataRestrictions, this.displayHints.mask);\n\t\tthis.id = json.id;\n\t\tthis.type = json.type;\n\t\tvar _errorCodes = [];\n\n\t\tthis.getErrorCodes = function (value) {\n\t\t\tif (value) {\n\t\t\t\t_errorCodes = [];\n\t\t\t\tthis.isValid(value);\n\t\t\t}\n\t\t\treturn _errorCodes;\n\t\t};\n\t\tthis.isValid = function (value) {\n\t\t\t// isValid checks all datarestrictions\n\t\t\tvar validators = this.dataRestrictions.validationRules;\n\t\t\tvar hasError = false;\n\t\t\tvalue = this.removeMask(value);\n\t\t\tfor (var i = 0, il = validators.length; i < il; i++) {\n\t\t\t\tvar validator = validators[i];\n\t\t\t\tif (!validator.validate(value)) {\n\t\t\t\t\thasError = true;\n\t\t\t\t\t_errorCodes.push(validator.errorMessageId);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !hasError;\n\t\t};\n\t\tthis.applyMask = function (newValue, oldValue) {\n\t\t\tvar maskingUtil = new MaskingUtil();\n\t\t\treturn maskingUtil.applyMask(this.displayHints.mask, newValue, oldValue);\n\t\t};\n\t\tthis.applyWildcardMask = function (newValue, oldValue) {\n\t\t\tvar maskingUtil = new MaskingUtil();\n\t\t\treturn maskingUtil.applyMask(this.displayHints.wildcardMask, newValue, oldValue);\n\t\t};\n\t\tthis.removeMask = function (value) {\n\t\t\tvar maskingUtil = new MaskingUtil();\n\t\t\treturn maskingUtil.removeMask(this.displayHints.mask, value);\n\t\t};\n\t};\n\n\tconnectsdk.PaymentProductField = PaymentProductField;\n\treturn PaymentProductField;\n});","define(\"connectsdk.PaymentProduct\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\n\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\n\t\tif (_json.fields) {\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\n\t\t\t\t_paymentProductFields.push(paymentProductField);\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar PaymentProduct = function (json) {\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\n\t\tbasicPaymentProduct.json = json;\n\t\tbasicPaymentProduct.paymentProductFields = [];\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\n\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\n\n\t\treturn basicPaymentProduct;\n\t};\n\n\tconnectsdk.PaymentProduct = PaymentProduct;\n\treturn PaymentProduct;\n});","define(\"connectsdk.PaymentProductGroup\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\", \"connectsdk.PaymentProductField\"], function(connectsdk, BasicPaymentProduct, PaymentProductField) {\n\n\tvar _parseJSON = function (_json, _paymentProductFields, _paymentProductFieldById) {\n\t\tif (_json.fields) {\n\t\t\tfor (var i = 0, il = _json.fields.length; i < il; i++) {\n\t\t\t\tvar paymentProductField = new PaymentProductField(_json.fields[i]);\n\t\t\t\t_paymentProductFields.push(paymentProductField);\n\t\t\t\t_paymentProductFieldById[paymentProductField.id] = paymentProductField;\n\t\t\t}\n\t\t}\n\t};\n\n\tvar PaymentProductGroup = function (json) {\n\t\tvar basicPaymentProduct = new BasicPaymentProduct(json);\n\t\tbasicPaymentProduct.json = json;\n\t\tbasicPaymentProduct.json.type = \"group\";\n\t\tbasicPaymentProduct.paymentProductFields = [];\n\t\tbasicPaymentProduct.paymentProductFieldById = {};\n\n\t\t_parseJSON(basicPaymentProduct.json, basicPaymentProduct.paymentProductFields, basicPaymentProduct.paymentProductFieldById);\n\n\t\treturn basicPaymentProduct;\n\t};\n\n\tconnectsdk.PaymentProductGroup = PaymentProductGroup;\n\treturn PaymentProductGroup;\n});","define(\"connectsdk.BasicPaymentProducts\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProduct\"], function(connectsdk, BasicPaymentProduct) {\n\n\tvar _parseJson = function (_json, _paymentProducts, _accountsOnFile, _paymentProductById, _accountOnFileById, _paymentProductByAccountOnFileId) {\n\t\tif (_json.paymentProducts) {\n\t\t\tfor (var i = 0, il = _json.paymentProducts.length; i < il; i++) {\n\t\t\t\tvar paymentProduct = new BasicPaymentProduct(_json.paymentProducts[i]);\n\t\t\t\t_paymentProducts.push(paymentProduct);\n\t\t\t\t_paymentProductById[paymentProduct.id] = paymentProduct;\n\n\t\t\t\tif (paymentProduct.accountsOnFile) {\n\t\t\t\t\tvar aofs = paymentProduct.accountsOnFile;\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\n\t\t\t\t\t\tvar aof = aofs[j];\n\t\t\t\t\t\t_accountsOnFile.push(aof);\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\n\t\t\t\t\t\t_paymentProductByAccountOnFileId[aof.id] = paymentProduct;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar BasicPaymentProducts = function (json) {\n\t\tthis.basicPaymentProducts = [];\n\t\tthis.basicPaymentProductById = {};\n\t\tthis.basicPaymentProductByAccountOnFileId = {};\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\tthis.json = json;\n\n\t\t_parseJson(json, this.basicPaymentProducts, this.accountsOnFile, this.basicPaymentProductById, this.accountOnFileById, this.basicPaymentProductByAccountOnFileId);\n\t};\n\n\tconnectsdk.BasicPaymentProducts = BasicPaymentProducts;\n\treturn BasicPaymentProducts;\n});","define(\"connectsdk.BasicPaymentProductGroups\", [\"connectsdk.core\", \"connectsdk.BasicPaymentProductGroup\"], function(connectsdk, BasicPaymentProductGroup) {\n\n\tvar _parseJson = function (_json, _paymentProductGroups, _accountsOnFile, _paymentProductGroupById, _accountOnFileById) {\n\t\tif (_json.paymentProductGroups) {\n\t\t\tfor (var i = 0, il = _json.paymentProductGroups.length; i < il; i++) {\n\t\t\t\tvar paymentProductGroup = new BasicPaymentProductGroup(_json.paymentProductGroups[i]);\n\t\t\t\t_paymentProductGroups.push(paymentProductGroup);\n\t\t\t\t_paymentProductGroupById[paymentProductGroup.id] = paymentProductGroup;\n\n\t\t\t\tif (paymentProductGroup.accountsOnFile) {\n\t\t\t\t\tvar aofs = paymentProductGroup.accountsOnFile;\n\t\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\n\t\t\t\t\t\tvar aof = aofs[j];\n\t\t\t\t\t\t_accountsOnFile.push(aof);\n\t\t\t\t\t\t_accountOnFileById[aof.id] = aof;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar BasicPaymentProductGroups = function (json) {\n\t\tthis.basicPaymentProductGroups = [];\n\t\tthis.basicPaymentProductGroupById = {};\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\tthis.json = json;\n\n\t\t_parseJson(json, this.basicPaymentProductGroups, this.accountsOnFile, this.basicPaymentProductGroupById, this.accountOnFileById);\n\t};\n\n\tconnectsdk.BasicPaymentProductGroups = BasicPaymentProductGroups;\n\treturn BasicPaymentProductGroups;\n});","define(\"connectsdk.BasicPaymentItems\", [\"connectsdk.core\"], function(connectsdk) {\n\t\"use strict\";\n\n\t\tvar _parseJson = function (_products, _groups, _basicPaymentItems) {\n\t\tvar doRemove = [];\n\t\tif (_groups) {\n\t\t\tfor (var i = 0, il = _groups.basicPaymentProductGroups.length; i < il; i++) {\n\t\t\t\tvar groupId = _groups.basicPaymentProductGroups[i].id,\n\t\t\t\t\t\tgroupReplaced = false;\n\t\t\t\tfor (var j = 0, jl = _products.basicPaymentProducts.length; j < jl; j++) {\n\t\t\t\t\tvar productMethod = _products.basicPaymentProducts[j].paymentProductGroup;\n\t\t\t\t\tif (productMethod === groupId && groupReplaced === false) {\n\t\t\t\t\t\t// replace instance by group\n\t\t\t\t\t\t_products.basicPaymentProducts.splice(j, 1, _groups.basicPaymentProductGroups[i]);\n\t\t\t\t\t\tgroupReplaced = true;\n\t\t\t\t\t} else if (productMethod === groupId && groupReplaced === true) {\n\t\t\t\t\t\t// mark for removal\n\t\t\t\t\t\tdoRemove.push(j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var i = doRemove.length -1, il = 0; i >= il; i--) {\n\t\t\t\t_products.basicPaymentProducts.splice(doRemove[i], 1);\n\t\t\t}\n\t\t}\n\t\t_basicPaymentItems.basicPaymentItems = JSON.parse(JSON.stringify(_products.basicPaymentProducts));\n\t\tfor (var i = 0, il = _basicPaymentItems.basicPaymentItems.length; i < il; i++) {\n\t\t\tvar basicPaymentItem = _basicPaymentItems.basicPaymentItems[i];\n\t\t\t_basicPaymentItems.basicPaymentItemById[basicPaymentItem.id] = basicPaymentItem;\n\t\t\tif (basicPaymentItem.accountsOnFile) {\n\t\t\t\tvar aofs = basicPaymentItem.accountsOnFile;\n\t\t\t\tfor (var j = 0, jl = aofs.length; j < jl; j++) {\n\t\t\t\t\tvar aof = aofs[j];\n\t\t\t\t\t_basicPaymentItems.accountsOnFile.push(aof);\n\t\t\t\t\t_basicPaymentItems.accountOnFileById[aof.id] = aof;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t};\n\n\tvar BasicPaymentItems = function (products, groups) {\n\t\tthis.basicPaymentItems = [];\n\t\tthis.basicPaymentItemById = {};\n\t\tthis.accountsOnFile = [];\n\t\tthis.accountOnFileById = {};\n\t\t_parseJson(products, groups, this);\n\t};\n\tconnectsdk.BasicPaymentItems = BasicPaymentItems;\n\treturn BasicPaymentItems;\n});","define(\"connectsdk.PaymentRequest\", [\"connectsdk.core\"], function(connectsdk) {\n  var PaymentRequest = function(clientSessionID) {\n    var _clientSessionID = clientSessionID;\n    var _fieldValues = {};\n    var _paymentProduct = null;\n    var _accountOnFile = null;\n    var _tokenize = false;\n\n    this.isValid = function() {\n      var errors = this.getErrorMessageIds();\n      // besides checking the fields for errors check if all mandatory fields are present as well\n      var paymentProduct = this.getPaymentProduct();\n      if (!paymentProduct) {\n        return false;\n      }\n      var allRequiredFieldsPresent = true;\n      for (var i = 0; i < paymentProduct.paymentProductFields.length; i++) {\n        var field = paymentProduct.paymentProductFields[i];\n        if (field.dataRestrictions.isRequired) {\n          // is this field present in the request?\n          var storedValue = this.getValue(field.id);\n          if (!storedValue && !this.getAccountOnFile()) {\n              // if we have an acoount on file the account on file could have the field, so we can ignore it\n            allRequiredFieldsPresent = false;\n          }\n        }\n      }\n      return errors.length === 0 && allRequiredFieldsPresent;\n    };\n    this.setValue = function(paymentProductFieldId, value) {\n      _fieldValues[paymentProductFieldId] = value;\n    };\n    this.setTokenize = function(tokenize) {\n      _tokenize = tokenize;\n    };\n    this.getTokenize = function() {\n      return _tokenize;\n    };\n    this.getErrorMessageIds = function() {\n      var errors = [];\n      for (key in _fieldValues) {\n        var paymentProductField = _paymentProduct.paymentProductFieldById[key];\n        if (paymentProductField) {\n          errors = errors.concat(paymentProductField.getErrorCodes(_fieldValues[key]));\n        }\n      }\n      return errors;\n    };\n    this.getValue = function(paymentProductFieldId) {\n      return _fieldValues[paymentProductFieldId];\n    };\n    this.getValues = function() {\n      return _fieldValues;\n    };\n    this.getMaskedValue = function(paymentProductFieldId) {\n      var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n      var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\n      return maskedString.formattedValue();\n    };\n    this.getMaskedValues = function() {\n      var fields = _fieldValues;\n      var result = [];\n      for (var paymentProductFieldId in fields) {\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n        var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\n        result[paymentProductFieldId] = maskedString.formattedValue;\n      }\n      return result;\n    };\n    this.getUnmaskedValues = function() {\n      var fields = _fieldValues;\n      var result = [];\n      for (var paymentProductFieldId in fields) {\n        var paymentProductField = _paymentProduct.paymentProductFieldById[paymentProductFieldId];\n        if (paymentProductField) {\n          var maskedString = paymentProductField.applyMask(this.getValue(paymentProductFieldId));\n          var formattedValue = maskedString.formattedValue;\n          result[paymentProductFieldId] = paymentProductField.removeMask(formattedValue);\n        }\n      }\n      return result;\n    };\n    this.setPaymentProduct = function(paymentProduct) {\n      if (paymentProduct.type === \"group\") {\n        return;\n      }\n      _paymentProduct = paymentProduct;\n    };\n    this.getPaymentProduct = function() {\n      return _paymentProduct;\n    };\n    this.setAccountOnFile = function(accountOnFile) {\n      for (var i = 0, il = accountOnFile.attributes.length; i < il; i++) {\n        var attribute = accountOnFile.attributes[i];\n        delete _fieldValues[attribute.key];\n      }\n      _accountOnFile = accountOnFile;\n    };\n    this.getAccountOnFile = function() {\n      return _accountOnFile;\n    };\n    this.getClientSessionID = function() {\n\t\t    return clientSessionID;\n    };\n  };\n  connectsdk.PaymentRequest = PaymentRequest;\n  return PaymentRequest;\n});","define(\"connectsdk.C2SPaymentProductContext\", [\"connectsdk.core\"], function(connectsdk) {\n\n  var C2SPaymentProductContext = function (payload) {\n\tthis.totalAmount = payload.totalAmount;\n\tthis.countryCode = payload.countryCode;\n\tthis.isRecurring = payload.isRecurring;\n\tthis.currency = payload.currency;\n\tthis.locale = payload.locale;\n  };\n\n  connectsdk.C2SPaymentProductContext = C2SPaymentProductContext;\n  return C2SPaymentProductContext;\n});","define(\"connectsdk.JOSEEncryptor\", [\"connectsdk.core\"], function(connectsdk) {\n\n\tvar pki = forge.pki;\n\tvar asn1 = forge.asn1;\n\tvar CEKKEYLENGTH = 512;\n\tvar IVLENGTH = 128;\n\n\tvar base64UrlEncode = function(str) {\n\t\tstr = forge.util.encode64(str);\n\t\tstr = str.split('=')[0];\n\t\tstr = str.replace(/\\+/g, '-');\n\t\tstr = str.replace(/\\//g, '_');\n\t\treturn str;\n\t};\n\n\tvar createProtectedHeader = function(kid) {\n\t\tvar JOSEHeader = {\n\t\t\t\"alg\" : \"RSA-OAEP\",\n\t\t\t\"enc\" : \"A256CBC-HS512\",\n\t\t\t\"kid\" : kid\n\t\t};\n\t\treturn JSON.stringify(JOSEHeader);\n\t};\n\n\tvar decodePemPublicKey = function(publickeyB64Encoded) {\n\t\t// step 1: base64decode\n\t\tvar publickeyB64Decoded = forge.util.decode64(publickeyB64Encoded);\n\t\t// create a bytebuffer with these bytes\n\t\tvar buffer2 = forge.util.createBuffer(publickeyB64Decoded, 'raw');\n\t\t// convert DER to ASN1 object\n\t\tvar publickeyObject2 = forge.asn1.fromDer(buffer2);\n\t\t// convert to publicKey object\n\t\tvar publicKey2 = pki.publicKeyFromAsn1(publickeyObject2);\n\t\treturn publicKey2;\n\t};\n\n\tvar encryptContentEncryptionKey = function(CEK, publicKey) {\n\t\t// encrypt CEK with OAEP+SHA-1+MGF1Padding\n\t\tvar encryptedCEK = publicKey.encrypt(CEK, 'RSA-OAEP');\n\t\treturn encryptedCEK;\n\t};\n\n\tvar encryptPayload = function(payload, encKey, initializationVector) {\n\t\tvar cipher = forge.cipher.createCipher('AES-CBC', encKey);\n\t\tcipher.start({\n\t\t\tiv : initializationVector\n\t\t});\n\t\tcipher.update(forge.util.createBuffer(payload));\n\t\tcipher.finish();\n\t\treturn cipher.output.bytes();\n\t};\n\n\tvar calculateAdditionalAuthenticatedDataLength = function(encodededProtectedHeader) {\n\t\tvar buffer = forge.util.createBuffer(encodededProtectedHeader);\n\t\tvar lengthInBits = buffer.length() * 8;\n\n\t\tvar buffer2 = forge.util.createBuffer();\n\t\t// convert int to 64bit big endian\n\t\tbuffer2.putInt32(0);\n\t\tbuffer2.putInt32(lengthInBits);\n\t\treturn buffer2.bytes();\n\t};\n\n\tvar calculateHMAC = function(macKey, encodededProtectedHeader, initializationVector, cipherText, al) {\n\t\tvar buffer = forge.util.createBuffer();\n\t\tbuffer.putBytes(encodededProtectedHeader);\n\t\tbuffer.putBytes(initializationVector);\n\t\tbuffer.putBytes(cipherText);\n\t\tbuffer.putBytes(al);\n\n\t\tvar hmacInput = buffer.bytes();\n\n\t\tvar hmac = forge.hmac.create();\n\t\thmac.start(forge.sha512.create(), macKey);\n\t\thmac.update(hmacInput);\n\t\treturn hmac.digest().bytes();\n\t};\n\n\tvar JOSEEncryptor = function() {\n\n\t\tthis.encrypt = function(plainTextValues, publicKeyResponse) {\n\t\t\t// Create protected header and encode it with Base64 encoding\n\t\t\tvar payload = JSON.stringify(plainTextValues);\n\t\t\tvar protectedHeader = createProtectedHeader(publicKeyResponse.keyId);\n\t\t\tvar encodededProtectedHeader = base64UrlEncode(protectedHeader);\n\n\t\t\t// Create ContentEncryptionKey, is a random byte[]\n\t\t\tvar CEK = forge.random.getBytesSync(CEKKEYLENGTH / 8);\n\t\t\tvar publicKey = decodePemPublicKey(publicKeyResponse.publicKey);\n\n\t\t\t// Encrypt the contentEncryptionKey with the GC gateway publickey and encode it with Base64 encoding\n\t\t\tvar encryptedContentEncryptionKey = encryptContentEncryptionKey(CEK, publicKey);\n\t\t\tvar encodedEncryptedContentEncryptionKey = base64UrlEncode(encryptedContentEncryptionKey);\n\n\t\t\t// Split the contentEncryptionKey in ENC_KEY and MAC_KEY for using hmac\n\t\t\tvar macKey = CEK.substring(0, CEKKEYLENGTH / 2 / 8);\n\t\t\tvar encKey = CEK.substring(CEKKEYLENGTH / 2 / 8);\n\n\t\t\t// Create Initialization Vector\n\t\t\tvar initializationVector = forge.random.getBytesSync(IVLENGTH / 8);\n\t\t\tvar encodededinitializationVector = base64UrlEncode(initializationVector);\n\n\t\t\t// Encrypt content with ContentEncryptionKey and Initialization Vector\n\t\t\tvar cipherText = encryptPayload(payload, encKey, initializationVector);\n\t\t\tvar encodedCipherText = base64UrlEncode(cipherText);\n\n\t\t\t// Create Additional Authenticated Data  and Additional Authenticated Data Length\n\t\t\tvar al = calculateAdditionalAuthenticatedDataLength(encodededProtectedHeader);\n\n\t\t\t// Calculates HMAC\n\t\t\tvar calculatedHmac = calculateHMAC(macKey, encodededProtectedHeader, initializationVector, cipherText, al);\n\n\t\t\t// Truncate HMAC Value to Create Authentication Tag\n\t\t\tvar authenticationTag = calculatedHmac.substring(0, calculatedHmac.length / 2);\n\t\t\tvar encodedAuthenticationTag = base64UrlEncode(authenticationTag);\n\n\t\t\treturn encodededProtectedHeader + \".\" + encodedEncryptedContentEncryptionKey + \".\" + encodededinitializationVector + \".\" + encodedCipherText + \".\" + encodedAuthenticationTag;\n\t\t};\n\t};\n\n\tconnectsdk.JOSEEncryptor = JOSEEncryptor;\n\treturn JOSEEncryptor;\n});","define(\"connectsdk.Encryptor\", [\"connectsdk.core\", \"connectsdk.promise\", \"connectsdk.JOSEEncryptor\"], function(connectsdk, Promise, JOSEEncryptor) {\n\n\tvar Encryptor = function(publicKeyResponsePromise) {\n\t\tthis.encrypt = function(paymentRequest) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar encryptedString = '';\n\t\t\tpublicKeyResponsePromise.then(function (publicKeyResponse) {\n\t\t\t\tif (paymentRequest.isValid()) {\n\t\t\t\t    \n\t\t\t\t\tvar blob = {\n\t\t\t\t\t   clientSessionId: paymentRequest.getClientSessionID()\n\t\t\t\t\t   ,nonce: forge.util.bytesToHex(forge.random.getBytesSync(16))\n\t\t\t\t\t   ,paymentProductId: paymentRequest.getPaymentProduct().id\n                       ,tokenize: paymentRequest.getTokenize()\n                    };\n                    \n\t\t\t\t\tif (paymentRequest.getAccountOnFile()) {\n                        blob[\"accountOnFileId\"] = paymentRequest.getAccountOnFile().id;\n                    }\n                    \n                    var paymentValues = [], values = paymentRequest.getUnmaskedValues();\n                    var ownValues = Object.getOwnPropertyNames(values);\n\t\t\t\t\tfor (var i = 0; i < ownValues.length; i++) {\n\t\t\t\t\t\tvar propertyName = ownValues[i];\n\t\t\t\t\t\tif (propertyName !== \"length\") {\n\t\t\t\t\t\t\tpaymentValues.push({\n\t\t\t\t\t\t\t\tkey: propertyName,\n\t\t\t\t\t\t\t\tvalue: values[propertyName]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n                    blob[\"paymentValues\"] = paymentValues;\n\t\t\t\t\t\n\t\t\t\t\t// use blob to encrypt\n\t\t\t\t\tvar joseEncryptor = new JOSEEncryptor();\n\t\t\t\t\tencryptedString = joseEncryptor.encrypt(blob, publicKeyResponse);\n\t\t\t\t\tpromise.resolve(encryptedString);\n\t\t\t\t} else {\n\t\t\t\t\tpromise.reject(paymentRequest.getErrorMessageIds());\n\t\t\t\t}\n\t\t\t}, function (error) {\n\t\t\t\tpromise.reject(error);\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\t};\n\n\tconnectsdk.Encryptor = Encryptor;\n\treturn Encryptor;\n});","define(\"connectsdk.Session\", [\"connectsdk.core\", \"connectsdk.C2SCommunicator\", \"connectsdk.C2SCommunicatorConfiguration\", \"connectsdk.IinDetailsResponse\", \"connectsdk.promise\", \"connectsdk.C2SPaymentProductContext\", \"connectsdk.BasicPaymentProducts\", \"connectsdk.BasicPaymentProductGroups\", \"connectsdk.PaymentProduct\", \"connectsdk.PaymentProductGroup\", \"connectsdk.BasicPaymentItems\", \"connectsdk.PaymentRequest\", \"connectsdk.Encryptor\"], function(connectsdk, C2SCommunicator, C2SCommunicatorConfiguration, IinDetailsResponse, Promise, C2SPaymentProductContext, BasicPaymentProducts, BasicPaymentProductGroups, PaymentProduct, PaymentProductGroup, BasicPaymentItems, PaymentRequest, Encryptor) {\n\n\tvar session = function (sessionDetails, paymentProduct) {\n\n\t\tvar _c2SCommunicatorConfiguration = new C2SCommunicatorConfiguration(sessionDetails)\n\t\t\t,_c2sCommunicator = new C2SCommunicator(_c2SCommunicatorConfiguration, paymentProduct)\n\t\t\t,_session = this\n\t\t\t,_paymentProductId, _paymentProduct, _paymentRequestPayload, _paymentRequest, _paymentProductGroupId, _paymentProductGroup;\n\t\tthis.apiBaseUrl = _c2SCommunicatorConfiguration.apiBaseUrl;\n\t\tthis.assetsBaseUrl = _c2SCommunicatorConfiguration.assetsBaseUrl;\n\n\t\tthis.getBasicPaymentProducts = function(paymentRequestPayload, paymentProductSpecificInputs) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\n\t\t\t_c2sCommunicator.getBasicPaymentProducts(c2SPaymentProductContext, paymentProductSpecificInputs).then(function (json) {\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\n\t\t\t\tvar paymentProducts = new BasicPaymentProducts(json);\n\t\t\t\tpromise.resolve(paymentProducts);\n\t\t\t}, function () {\n\t\t\t\tpromise.reject();\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getBasicPaymentProductGroups = function(paymentRequestPayload) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\n\t\t\t_c2sCommunicator.getBasicPaymentProductGroups(c2SPaymentProductContext).then(function (json) {\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\n\t\t\t\tvar paymentProductGroups = new BasicPaymentProductGroups(json);\n\t\t\t\tpromise.resolve(paymentProductGroups);\n\t\t\t}, function () {\n\t\t\t\tpromise.reject();\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getBasicPaymentItems = function(paymentRequestPayload, useGroups, paymentProductSpecificInputs) {\n\t\t\tvar promise = new Promise();\n\t\t\t// get products & groups\n\t\t\tif (useGroups) {\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\n\t\t\t\t\t_session.getBasicPaymentProductGroups(paymentRequestPayload).then(function (groups) {\n\t\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, groups);\n\t\t\t\t\t\tpromise.resolve(basicPaymentItems);\n\t\t\t\t\t}, function () {\n\t\t\t\t\t\tpromise.reject();\n\t\t\t\t\t});\n\t\t\t\t}, function () {\n\t\t\t\t\tpromise.reject();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t_session.getBasicPaymentProducts(paymentRequestPayload, paymentProductSpecificInputs).then(function (products) {\n\t\t\t\t\tvar basicPaymentItems = new BasicPaymentItems(products, null);\n\t\t\t\t\tpromise.resolve(basicPaymentItems);\n\t\t\t\t}, function () {\n\t\t\t\t\tpromise.reject();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProduct = function(paymentProductId, paymentRequestPayload, paymentProductSpecificInputs) {\n\t\t\tvar promise = new Promise();\n\t\t\t_paymentProductId = paymentProductId;\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\n\t\t\t_c2sCommunicator.getPaymentProduct(paymentProductId, c2SPaymentProductContext, paymentProductSpecificInputs).then(function (response) {\n\t\t\t\t_paymentProduct = new PaymentProduct(response);\n\t\t\t\tpromise.resolve(_paymentProduct);\n\t\t\t}, function () {\n\t\t\t\t_paymentProduct = null;\n\t\t\t\tpromise.reject();\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductGroup = function(paymentProductGroupId, paymentRequestPayload) {\n\t\t\tvar promise = new Promise();\n\t\t\t_paymentProductGroupId = paymentProductGroupId;\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\n\t\t\t_c2sCommunicator.getPaymentProductGroup(paymentProductGroupId, c2SPaymentProductContext).then(function (response) {\n\t\t\t\t_paymentProductGroup = new PaymentProductGroup(response);\n\t\t\t\tpromise.resolve(_paymentProductGroup);\n\t\t\t}, function () {\n\t\t\t\t_paymentProductGroup = null;\n\t\t\t\tpromise.reject();\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getIinDetails = function (partialCreditCardNumber, paymentRequestPayload) {\n\t\t\tpartialCreditCardNumber = partialCreditCardNumber.replace(/ /g, '').substring(0,6);\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(_paymentRequestPayload || paymentRequestPayload);\n\t\t\treturn _c2sCommunicator.getPaymentProductIdByCreditCardNumber(partialCreditCardNumber, c2SPaymentProductContext);\n\t\t};\n\n\t\tthis.getPublicKey = function () {\n\t\t\treturn _c2sCommunicator.getPublicKey();\n\t\t};\n\n\t\tthis.getPaymentProductPublicKey = function (paymentProductId) {\n\t\t\treturn _c2sCommunicator.getPaymentProductPublicKey(paymentProductId);\n\t\t};\n\n\t\tthis.getPaymentProductNetworks = function (paymentProductId, paymentRequestPayload) {\n\t\t\tvar promise = new Promise();\n\t\t\tvar c2SPaymentProductContext = new C2SPaymentProductContext(paymentRequestPayload);\n\t\t\t_c2sCommunicator.getPaymentProductNetworks(paymentProductId, c2SPaymentProductContext).then(function (response) {\n\t\t\t\t_paymentRequestPayload = paymentRequestPayload;\n\t\t\t\tpromise.resolve(response);\n\t\t\t}, function () {\n\t\t\t\tpromise.reject();\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getPaymentProductDirectory = function (paymentProductId, currencyCode, countryCode) {\n\t\t\treturn _c2sCommunicator.getPaymentProductDirectory(paymentProductId, currencyCode, countryCode);\n\t\t};\n\n\t\tthis.convertAmount = function (amount, source, target) {\n\t\t\treturn _c2sCommunicator.convertAmount(amount, source, target);\n\t\t};\n\n\t\tthis.getPaymentRequest = function () {\n\t\t\tif (!_paymentRequest) {\n\t\t\t\t_paymentRequest = new PaymentRequest(sessionDetails.clientSessionID);\n\t\t\t}\n\t\t\treturn _paymentRequest;\n\t\t};\n\n\t\tthis.getEncryptor = function () {\n\t\t\tvar publicKeyResponsePromise = _c2sCommunicator.getPublicKey();\n\t\t\treturn new Encryptor(publicKeyResponsePromise);\n\t\t};\n\n\t\tthis.getThirdPartyPaymentStatus = function (paymentId) {\n\t\t\tvar promise = new Promise();\n\t\t\t_c2sCommunicator.getThirdPartyPaymentStatus(paymentId).then(function (response) {\n\t\t\t\tpromise.resolve(response);\n\t\t\t}, function () {\n\t\t\t\tpromise.reject();\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tthis.getCustomerDetails = function (paymentProductId, paymentRequestPayload) {\n\t\t\treturn _c2sCommunicator.getCustomerDetails(paymentProductId, paymentRequestPayload);\n\t\t};\n\t};\n\tconnectsdk.Session = session;\n\treturn session;\n});"]}